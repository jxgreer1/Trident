2024-04-23 07:03:02,402 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '300', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\n{% endif %}\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 300.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\n{% endif %}\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'max_accel_to_decel': 10000.0, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-23 07:03:02,407 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-23 07:03:02,409 [printer.py:reinit()] - Klipper version: v0.12.0-113-g28f06a10-dirty
2024-04-23 07:03:02,409 [printer.py:reinit()] - # Extruders: 1
2024-04-23 07:03:02,409 [printer.py:reinit()] - # Temperature devices: 5
2024-04-23 07:03:02,409 [printer.py:reinit()] - # Fans: 6
2024-04-23 07:03:02,409 [printer.py:reinit()] - # Output pins: 1
2024-04-23 07:03:02,409 [printer.py:reinit()] - # Leds: 2
2024-04-23 07:03:02,414 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2024-04-23 07:03:02,415 [functions.py:log_start()] - KlipperScreen Version: v0.3.8-101-g0226ba0
2024-04-23 07:03:02,415 [functions.py:log_start()] - Python version: 3.9
2024-04-23 07:03:02,428 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-23 07:03:02,431 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-23 07:03:02,701 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-23 07:03:02,705 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-23 07:03:02,705 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-23 07:03:02,707 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-23 07:03:02,709 [screen.py:init_klipper()] - Printer initialized
2024-04-23 07:03:02,710 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-23 07:03:02,710 [printer.py:change_state()] - Adding callback for state: startup
2024-04-23 07:03:04,650 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-23 07:03:04,650 [printer.py:change_state()] - Adding callback for state: ready
2024-04-23 07:03:04,653 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 07:03:04,654 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 07:03:04,722 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-23 07:03:04,739 [main_menu.py:add_device()] - Adding device: extruder
2024-04-23 07:03:04,744 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-23 07:03:04,748 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-23 07:03:04,753 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-23 07:03:04,758 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-23 07:03:04,762 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-23 07:03:04,806 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-23 07:03:04,829 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-23 07:03:04,834 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-23 07:03:04,843 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-23 07:03:04,844 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-23 07:03:37,740 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-23 07:03:37,740 [printer.py:change_state()] - Adding callback for state: printing
2024-04-23 07:03:37,779 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 07:03:37,779 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 07:03:37,923 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-23 07:03:37,928 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-23 07:03:37,935 [job_status.py:update_file_metadata()] - Update Metadata. File: Voron_Design_Cube_v7_ABS_14m46s.gcode Size: 2996332
2024-04-23 07:03:37,941 [job_status.py:show_file_thumbnail()] - Voron_Design_Cube_v7_ABS_14m46s.gcode
2024-04-23 07:03:55,588 [screen.py:show_popup_message()] - echo: Homing
2024-04-23 07:04:04,900 [screen.py:show_popup_message()] - echo: Homing Y Axis
2024-04-23 07:04:07,544 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-23 07:04:08,960 [screen.py:show_popup_message()] - echo: Heating Bed
2024-04-23 07:10:02,282 [screen.py:show_popup_message()] - echo: Z tilt thingy
2024-04-23 07:10:33,687 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-23 07:10:37,787 [screen.py:show_popup_message()] - echo: No PA value for 
2024-04-23 07:11:20,772 [screen.py:show_popup_message()] - echo: No PA value for 
2024-04-23 07:11:37,044 [screen.py:show_popup_message()] - echo: Printing...
2024-04-23 07:13:08,188 [KlippyGtk.py:Dialog()] - Showing dialog Cancel (width=800, height=480)
2024-04-23 07:13:08,642 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2024-04-23 07:13:08,643 [job_status.py:cancel_confirm()] - Canceling print
2024-04-23 07:13:08,643 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelling'
2024-04-23 07:13:08,646 [KlippyWebsocket.py:print_cancel()] - Sending printer.print.cancel
2024-04-23 07:13:09,244 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2024-04-23 07:13:09,244 [printer.py:change_state()] - Adding callback for state: ready
2024-04-23 07:13:09,252 [job_status.py:set_state()] - Changing job_status state from 'cancelling' to 'standby'
2024-04-23 07:13:11,211 [screen.py:show_popup_message()] - echo: Print Complete
2024-04-23 07:15:03,678 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Calibration cube-32x32.png. Retrying in 6 seconds
2024-04-23 07:15:03,680 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Calibration cube-400x300.png. Retrying in 6 seconds
2024-04-23 07:15:03,683 [files.py:add_file()] - File already exists: SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:15:03,688 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:15:03,690 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:15:03,692 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:15:03,789 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-23 07:15:03,790 [printer.py:change_state()] - Adding callback for state: printing
2024-04-23 07:15:03,797 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-23 07:15:03,802 [job_status.py:update_file_metadata()] - Update Metadata. File: SS_ABS_260C_Calibration cube.gcode Size: 1580730
2024-04-23 07:15:03,807 [job_status.py:show_file_thumbnail()] - SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:15:03,833 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 07:15:03,833 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 07:15:03,951 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-23 07:15:03,956 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-23 07:15:03,963 [job_status.py:update_file_metadata()] - Update Metadata. File: SS_ABS_260C_Calibration cube.gcode Size: 1580730
2024-04-23 07:15:03,967 [job_status.py:show_file_thumbnail()] - SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:15:36,713 [screen.py:show_popup_message()] - echo: Heating Bed
2024-04-23 07:15:50,728 [screen.py:show_popup_message()] - echo: Heat soaking
2024-04-23 07:16:28,750 [screen.py:show_popup_message()] - echo: Setting PA for ABS
2024-04-23 07:16:41,594 [screen.py:show_popup_message()] - echo: Printing...
2024-04-23 07:34:41,447 [screen.py:show_popup_message()] - error: // Unknown command:"NEVERMORE_END_PRINT"
2024-04-23 07:34:41,578 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2024-04-23 07:34:41,578 [printer.py:change_state()] - Adding callback for state: ready
2024-04-23 07:34:41,589 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2024-04-23 07:38:01,041 [print.py:_callback()] - deleting SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode
2024-04-23 07:38:01,045 [print.py:_callback()] - deleting SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode
2024-04-23 07:38:01,046 [print.py:delete_file()] - 'SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode' is not in list
2024-04-23 07:38:01,046 [print.py:delete_file()] - 'SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode'
2024-04-23 07:38:01,048 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,049 [print.py:_callback()] - deleting SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode
2024-04-23 07:38:01,049 [print.py:delete_file()] - 'SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode' is not in list
2024-04-23 07:38:01,050 [print.py:delete_file()] - 'SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode'
2024-04-23 07:38:01,070 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,098 [print.py:_callback()] - deleting SS_ABS_255C_huvud_multi_mount.gcode
2024-04-23 07:38:01,101 [print.py:_callback()] - deleting SS_ABS_255C_huvud_multi_mount.gcode
2024-04-23 07:38:01,102 [print.py:delete_file()] - 'SS_ABS_255C_huvud_multi_mount.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_huvud_multi_mount.gcode' is not in list
2024-04-23 07:38:01,103 [print.py:delete_file()] - 'SS_ABS_255C_huvud_multi_mount.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_huvud_multi_mount.gcode'
2024-04-23 07:38:01,104 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_huvud_multi_mount.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,105 [print.py:_callback()] - deleting SS_ABS_255C_huvud_multi_mount.gcode
2024-04-23 07:38:01,105 [print.py:delete_file()] - 'SS_ABS_255C_huvud_multi_mount.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_huvud_multi_mount.gcode' is not in list
2024-04-23 07:38:01,106 [print.py:delete_file()] - 'SS_ABS_255C_huvud_multi_mount.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_huvud_multi_mount.gcode'
2024-04-23 07:38:01,108 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_huvud_multi_mount.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,108 [print.py:_callback()] - deleting SS_ABS_255C_E3D_Collet_boxxy.gcode
2024-04-23 07:38:01,116 [print.py:_callback()] - deleting SS_ABS_255C_E3D_Collet_boxxy.gcode
2024-04-23 07:38:01,116 [print.py:delete_file()] - 'SS_ABS_255C_E3D_Collet_boxxy.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_E3D_Collet_boxxy.gcode' is not in list
2024-04-23 07:38:01,117 [print.py:delete_file()] - 'SS_ABS_255C_E3D_Collet_boxxy.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_E3D_Collet_boxxy.gcode'
2024-04-23 07:38:01,120 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_E3D_Collet_boxxy.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,121 [print.py:_callback()] - deleting SS_ABS_255C_E3D_Collet_boxxy.gcode
2024-04-23 07:38:01,121 [print.py:delete_file()] - 'SS_ABS_255C_E3D_Collet_boxxy.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_E3D_Collet_boxxy.gcode' is not in list
2024-04-23 07:38:01,122 [print.py:delete_file()] - 'SS_ABS_255C_E3D_Collet_boxxy.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_E3D_Collet_boxxy.gcode'
2024-04-23 07:38:01,124 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_E3D_Collet_boxxy.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,124 [print.py:_callback()] - deleting SS_ABS_290C_Calibration cube.gcode
2024-04-23 07:38:01,127 [print.py:_callback()] - deleting SS_ABS_290C_Calibration cube.gcode
2024-04-23 07:38:01,127 [print.py:delete_file()] - 'SS_ABS_290C_Calibration cube.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_290C_Calibration cube.gcode' is not in list
2024-04-23 07:38:01,128 [print.py:delete_file()] - 'SS_ABS_290C_Calibration cube.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_290C_Calibration cube.gcode'
2024-04-23 07:38:01,129 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_290C_Calibration cube.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,130 [print.py:_callback()] - deleting SS_ABS_290C_Calibration cube.gcode
2024-04-23 07:38:01,131 [print.py:delete_file()] - 'SS_ABS_290C_Calibration cube.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_290C_Calibration cube.gcode' is not in list
2024-04-23 07:38:01,131 [print.py:delete_file()] - 'SS_ABS_290C_Calibration cube.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_290C_Calibration cube.gcode'
2024-04-23 07:38:01,133 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_290C_Calibration cube.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,133 [print.py:_callback()] - deleting SS_ABS_255C_1.gcode
2024-04-23 07:38:01,136 [print.py:_callback()] - deleting SS_ABS_255C_1.gcode
2024-04-23 07:38:01,136 [print.py:delete_file()] - 'SS_ABS_255C_1.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_1.gcode' is not in list
2024-04-23 07:38:01,137 [print.py:delete_file()] - 'SS_ABS_255C_1.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_1.gcode'
2024-04-23 07:38:01,137 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_1.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,138 [print.py:_callback()] - deleting SS_ABS_255C_1.gcode
2024-04-23 07:38:01,138 [print.py:delete_file()] - 'SS_ABS_255C_1.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_1.gcode' is not in list
2024-04-23 07:38:01,138 [print.py:delete_file()] - 'SS_ABS_255C_1.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_1.gcode'
2024-04-23 07:38:01,139 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_1.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,140 [print.py:_callback()] - deleting PATTERNASATRIDENT.gcode
2024-04-23 07:38:01,142 [print.py:_callback()] - deleting PATTERNASATRIDENT.gcode
2024-04-23 07:38:01,143 [print.py:delete_file()] - 'PATTERNASATRIDENT.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'PATTERNASATRIDENT.gcode' is not in list
2024-04-23 07:38:01,143 [print.py:delete_file()] - 'PATTERNASATRIDENT.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'PATTERNASATRIDENT.gcode'
2024-04-23 07:38:01,144 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'PATTERNASATRIDENT.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,145 [print.py:_callback()] - deleting PATTERNASATRIDENT.gcode
2024-04-23 07:38:01,145 [print.py:delete_file()] - 'PATTERNASATRIDENT.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'PATTERNASATRIDENT.gcode' is not in list
2024-04-23 07:38:01,145 [print.py:delete_file()] - 'PATTERNASATRIDENT.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'PATTERNASATRIDENT.gcode'
2024-04-23 07:38:01,146 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'PATTERNASATRIDENT.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,146 [print.py:_callback()] - deleting SS_ABS_255C_Body1.gcode
2024-04-23 07:38:01,149 [print.py:_callback()] - deleting SS_ABS_255C_Body1.gcode
2024-04-23 07:38:01,149 [print.py:delete_file()] - 'SS_ABS_255C_Body1.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_Body1.gcode' is not in list
2024-04-23 07:38:01,150 [print.py:delete_file()] - 'SS_ABS_255C_Body1.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_Body1.gcode'
2024-04-23 07:38:01,150 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_Body1.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,151 [print.py:_callback()] - deleting SS_ABS_255C_Body1.gcode
2024-04-23 07:38:01,151 [print.py:delete_file()] - 'SS_ABS_255C_Body1.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_Body1.gcode' is not in list
2024-04-23 07:38:01,151 [print.py:delete_file()] - 'SS_ABS_255C_Body1.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_Body1.gcode'
2024-04-23 07:38:01,152 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_Body1.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,153 [print.py:_callback()] - deleting SS_ABS_255C_Body1_boxxy.gcode
2024-04-23 07:38:01,155 [print.py:_callback()] - deleting SS_ABS_255C_Body1_boxxy.gcode
2024-04-23 07:38:01,155 [print.py:delete_file()] - 'SS_ABS_255C_Body1_boxxy.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_Body1_boxxy.gcode' is not in list
2024-04-23 07:38:01,156 [print.py:delete_file()] - 'SS_ABS_255C_Body1_boxxy.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_Body1_boxxy.gcode'
2024-04-23 07:38:01,157 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_Body1_boxxy.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,158 [print.py:_callback()] - deleting SS_ABS_255C_Body1_boxxy.gcode
2024-04-23 07:38:01,158 [print.py:delete_file()] - 'SS_ABS_255C_Body1_boxxy.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_Body1_boxxy.gcode' is not in list
2024-04-23 07:38:01,158 [print.py:delete_file()] - 'SS_ABS_255C_Body1_boxxy.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_Body1_boxxy.gcode'
2024-04-23 07:38:01,159 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_Body1_boxxy.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,159 [print.py:_callback()] - deleting SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode
2024-04-23 07:38:01,162 [print.py:_callback()] - deleting SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode
2024-04-23 07:38:01,162 [print.py:delete_file()] - 'SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode' is not in list
2024-04-23 07:38:01,163 [print.py:delete_file()] - 'SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode'
2024-04-23 07:38:01,164 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,164 [print.py:_callback()] - deleting SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode
2024-04-23 07:38:01,164 [print.py:delete_file()] - 'SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode' is not in list
2024-04-23 07:38:01,165 [print.py:delete_file()] - 'SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode'
2024-04-23 07:38:01,165 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,166 [print.py:_callback()] - deleting Voron_Design_Cube_v7_ABS_14m46s.gcode
2024-04-23 07:38:01,168 [print.py:_callback()] - deleting Voron_Design_Cube_v7_ABS_14m46s.gcode
2024-04-23 07:38:01,169 [print.py:delete_file()] - 'Voron_Design_Cube_v7_ABS_14m46s.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'Voron_Design_Cube_v7_ABS_14m46s.gcode' is not in list
2024-04-23 07:38:01,169 [print.py:delete_file()] - 'Voron_Design_Cube_v7_ABS_14m46s.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'Voron_Design_Cube_v7_ABS_14m46s.gcode'
2024-04-23 07:38:01,170 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'Voron_Design_Cube_v7_ABS_14m46s.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,170 [print.py:_callback()] - deleting Voron_Design_Cube_v7_ABS_14m46s.gcode
2024-04-23 07:38:01,170 [print.py:delete_file()] - 'Voron_Design_Cube_v7_ABS_14m46s.gcode' is not in list
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 311, in delete_file
    self.filelist[directory]["files"].pop(self.filelist[directory]["files"].index(os.path.basename(filename)))
ValueError: 'Voron_Design_Cube_v7_ABS_14m46s.gcode' is not in list
2024-04-23 07:38:01,171 [print.py:delete_file()] - 'Voron_Design_Cube_v7_ABS_14m46s.gcode'
Traceback (most recent call last):
  File "/home/pi/KlipperScreen/panels/print.py", line 334, in delete_file
    self.dir_panels[directory].remove(self.files[filename])
KeyError: 'Voron_Design_Cube_v7_ABS_14m46s.gcode'
2024-04-23 07:38:01,172 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'Voron_Design_Cube_v7_ABS_14m46s.gcode'
  File "/home/pi/KlipperScreen/panels/print.py", line 386, in _callback
    self.delete_file(file)

  File "/home/pi/KlipperScreen/panels/print.py", line 338, in delete_file
    self.files.pop(filename)
NoneType: None
2024-04-23 07:38:01,299 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy-400x300.png
2024-04-23 07:38:01,302 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy-400x300.png
2024-04-23 07:38:01,305 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy-400x300.png
2024-04-23 07:38:01,307 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS-400x300.png
2024-04-23 07:38:01,308 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS-400x300.png
2024-04-23 07:38:01,308 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS-400x300.png
2024-04-23 07:38:01,321 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1-32x32.png
2024-04-23 07:38:01,322 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1-32x32.png
2024-04-23 07:38:01,324 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1-32x32.png
2024-04-23 07:38:01,325 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_1-400x300.png
2024-04-23 07:38:01,326 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_1-400x300.png
2024-04-23 07:38:01,327 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_1-400x300.png
2024-04-23 07:38:01,328 [print.py:_callback()] - deleting .thumbs/Voron_Design_Cube_v7_ABS_14m46s-300x300.png
2024-04-23 07:38:01,329 [print.py:_callback()] - deleting .thumbs/Voron_Design_Cube_v7_ABS_14m46s-300x300.png
2024-04-23 07:38:01,329 [print.py:_callback()] - deleting .thumbs/Voron_Design_Cube_v7_ABS_14m46s-300x300.png
2024-04-23 07:38:01,330 [print.py:_callback()] - deleting .thumbs/SS_ABS_290C_Calibration cube-400x300.png
2024-04-23 07:38:01,331 [print.py:_callback()] - deleting .thumbs/SS_ABS_290C_Calibration cube-400x300.png
2024-04-23 07:38:01,332 [print.py:_callback()] - deleting .thumbs/SS_ABS_290C_Calibration cube-400x300.png
2024-04-23 07:38:01,333 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy-32x32.png
2024-04-23 07:38:01,334 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy-32x32.png
2024-04-23 07:38:01,335 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_[a]_fan_nozzle_mag+_waterheater_combo_a_x1_rev3_boxxy-32x32.png
2024-04-23 07:38:01,335 [print.py:_callback()] - deleting .thumbs/Voron_Design_Cube_v7_ABS_14m46s-32x32.png
2024-04-23 07:38:01,335 [print.py:_callback()] - deleting .thumbs/Voron_Design_Cube_v7_ABS_14m46s-32x32.png
2024-04-23 07:38:01,336 [print.py:_callback()] - deleting .thumbs/Voron_Design_Cube_v7_ABS_14m46s-32x32.png
2024-04-23 07:38:01,336 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1_boxxy-32x32.png
2024-04-23 07:38:01,337 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1_boxxy-32x32.png
2024-04-23 07:38:01,337 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1_boxxy-32x32.png
2024-04-23 07:38:01,338 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1_boxxy-400x300.png
2024-04-23 07:38:01,339 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1_boxxy-400x300.png
2024-04-23 07:38:01,340 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1_boxxy-400x300.png
2024-04-23 07:38:01,341 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS-32x32.png
2024-04-23 07:38:01,342 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS-32x32.png
2024-04-23 07:38:01,342 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_FULL_KlipperScreenMount_StockTroodonCompatible_ABS-32x32.png
2024-04-23 07:38:01,343 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_E3D_Collet_boxxy-400x300.png
2024-04-23 07:38:01,344 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_E3D_Collet_boxxy-400x300.png
2024-04-23 07:38:01,345 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_E3D_Collet_boxxy-400x300.png
2024-04-23 07:38:01,346 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_huvud_multi_mount-32x32.png
2024-04-23 07:38:01,347 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_huvud_multi_mount-32x32.png
2024-04-23 07:38:01,347 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_huvud_multi_mount-32x32.png
2024-04-23 07:38:01,348 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_huvud_multi_mount-400x300.png
2024-04-23 07:38:01,349 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_huvud_multi_mount-400x300.png
2024-04-23 07:38:01,350 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_huvud_multi_mount-400x300.png
2024-04-23 07:38:01,364 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_E3D_Collet_boxxy-32x32.png
2024-04-23 07:38:01,364 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_E3D_Collet_boxxy-32x32.png
2024-04-23 07:38:01,365 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_E3D_Collet_boxxy-32x32.png
2024-04-23 07:38:01,366 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_1-32x32.png
2024-04-23 07:38:01,367 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_1-32x32.png
2024-04-23 07:38:01,367 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_1-32x32.png
2024-04-23 07:38:01,368 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1-400x300.png
2024-04-23 07:38:01,369 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1-400x300.png
2024-04-23 07:38:01,369 [print.py:_callback()] - deleting .thumbs/SS_ABS_255C_Body1-400x300.png
2024-04-23 07:38:01,370 [print.py:_callback()] - deleting .thumbs/SS_ABS_290C_Calibration cube-32x32.png
2024-04-23 07:38:01,371 [print.py:_callback()] - deleting .thumbs/SS_ABS_290C_Calibration cube-32x32.png
2024-04-23 07:38:01,371 [print.py:_callback()] - deleting .thumbs/SS_ABS_290C_Calibration cube-32x32.png
2024-04-23 07:38:03,965 [print.py:_callback()] - adding PA_INTERNALPERM.gcode
2024-04-23 07:38:03,978 [print.py:_callback()] - adding PA_INTERNALPERM.gcode
2024-04-23 07:38:03,979 [print.py:_callback()] - adding PA_INTERNALPERM.gcode
2024-04-23 07:38:03,983 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 07:38:03,984 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 07:38:03,985 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 07:39:02,391 [job_status.py:close_panel()] - Closing job_status panel
2024-04-23 07:39:02,397 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 07:39:02,397 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 07:39:02,513 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-23 07:39:02,541 [main_menu.py:add_device()] - Adding device: extruder
2024-04-23 07:39:02,548 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-23 07:39:02,553 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-23 07:39:02,558 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-23 07:39:02,563 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-23 07:39:02,570 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-23 07:39:02,616 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-23 07:39:02,929 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 07:39:02,937 [print.py:__init__()] - 24h time is True
2024-04-23 07:39:02,982 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > print
2024-04-23 07:39:02,983 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-23 07:39:02,983 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-23 07:39:05,251 [KlippyGtk.py:Dialog()] - Showing dialog Print PA_INTERNALPERM.gcode (width=800, height=480)
2024-04-23 07:39:06,225 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2024-04-23 07:39:06,225 [print.py:confirm_print_response()] - Starting print: PA_INTERNALPERM.gcode
2024-04-23 07:39:06,226 [KlippyWebsocket.py:print_start()] - Sending printer.print.start
2024-04-23 07:39:06,477 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-23 07:39:06,477 [printer.py:change_state()] - Adding callback for state: printing
2024-04-23 07:39:06,486 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 07:39:06,487 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 07:39:06,603 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-23 07:39:06,608 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-23 07:39:06,615 [job_status.py:update_file_metadata()] - Update Metadata. File: PA_INTERNALPERM.gcode Size: 87748
2024-04-23 07:39:06,616 [job_status.py:show_file_thumbnail()] - PA_INTERNALPERM.gcode
2024-04-23 07:39:06,616 [job_status.py:show_file_thumbnail()] - no pixbuf
2024-04-23 07:39:06,620 [screen.py:show_popup_message()] - echo: Homing X Axis
2024-04-23 07:39:14,831 [screen.py:show_popup_message()] - echo: Homing Y Axis
2024-04-23 07:39:17,615 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-23 07:40:04,272 [screen.py:show_popup_message()] - echo: Heating Bed
2024-04-23 07:40:14,285 [screen.py:show_popup_message()] - echo: Heat soaking
2024-04-23 07:41:32,858 [screen.py:show_popup_message()] - error: Empty clusters found
2024-04-23 07:41:32,960 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2024-04-23 07:41:32,961 [printer.py:change_state()] - Adding callback for state: ready
2024-04-23 07:41:32,968 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2024-04-23 07:49:18,786 [files.py:add_file()] - File already exists: SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:49:18,792 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:49:18,793 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:49:18,795 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:49:18,796 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:49:18,798 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Calibration cube-32x32.png. Retrying in 6 seconds
2024-04-23 07:49:18,799 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Calibration cube-400x300.png. Retrying in 6 seconds
2024-04-23 07:49:28,435 [job_status.py:set_state()] - Changing job_status state from 'error' to 'standby'
2024-04-23 07:49:42,105 [files.py:add_file()] - File already exists: SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:49:42,113 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Calibration cube-32x32.png. Retrying in 6 seconds
2024-04-23 07:49:42,114 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Calibration cube-400x300.png. Retrying in 6 seconds
2024-04-23 07:49:42,114 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:49:42,115 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:49:42,116 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:49:42,117 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-23 07:49:49,804 [files.py:add_file()] - File already exists: PA_INTERNALPERM.gcode
2024-04-23 07:49:49,809 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 07:49:49,810 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 07:49:49,811 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 07:49:49,812 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 07:49:52,242 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-23 07:49:52,242 [printer.py:change_state()] - Adding callback for state: printing
2024-04-23 07:49:52,247 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-23 07:49:52,251 [job_status.py:update_file_metadata()] - Update Metadata. File: PA_INTERNALPERM.gcode Size: 88502
2024-04-23 07:49:52,252 [job_status.py:show_file_thumbnail()] - PA_INTERNALPERM.gcode
2024-04-23 07:49:52,252 [job_status.py:show_file_thumbnail()] - no pixbuf
2024-04-23 07:49:52,274 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 07:49:52,274 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 07:49:52,391 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-23 07:49:52,395 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-23 07:49:52,402 [job_status.py:update_file_metadata()] - Update Metadata. File: PA_INTERNALPERM.gcode Size: 88502
2024-04-23 07:49:52,402 [job_status.py:show_file_thumbnail()] - PA_INTERNALPERM.gcode
2024-04-23 07:49:52,403 [job_status.py:show_file_thumbnail()] - no pixbuf
2024-04-23 07:50:42,212 [screen.py:show_popup_message()] - echo: Heating Bed
2024-04-23 07:53:37,346 [screen.py:show_popup_message()] - echo: Heat soaking
2024-04-23 07:54:46,063 [screen.py:show_popup_message()] - echo: Setting PA for ABS
2024-04-23 07:55:00,696 [screen.py:show_popup_message()] - echo: Printing...
2024-04-23 08:01:34,621 [screen.py:show_popup_message()] - echo: Print Complete
2024-04-23 08:01:34,739 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2024-04-23 08:01:34,739 [printer.py:change_state()] - Adding callback for state: ready
2024-04-23 08:01:34,747 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2024-04-23 08:04:23,932 [job_status.py:set_state()] - Changing job_status state from 'complete' to 'standby'
2024-04-23 08:04:32,922 [files.py:add_file()] - File already exists: PA_INTERNALPERM.gcode
2024-04-23 08:04:32,925 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 08:04:32,926 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 08:04:32,928 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 08:04:32,929 [print.py:_callback()] - updating PA_INTERNALPERM.gcode
2024-04-23 08:04:37,309 [print.py:_callback()] - adding PAEXTERNAL.gcode
2024-04-23 08:04:37,321 [print.py:_callback()] - adding PAEXTERNAL.gcode
2024-04-23 08:04:37,323 [print.py:_callback()] - adding PAEXTERNAL.gcode
2024-04-23 08:04:37,324 [print.py:_callback()] - adding PAEXTERNAL.gcode
2024-04-23 08:04:37,328 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:04:37,329 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:04:37,330 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:04:37,331 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:04:46,608 [files.py:add_file()] - File already exists: PAEXTERNAL.gcode
2024-04-23 08:04:46,612 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:04:46,613 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:04:46,615 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:04:46,616 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:04:49,972 [screen.py:show_popup_message()] - error: // Unknown command:"OBJECT:{""
2024-04-23 08:04:50,008 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-23 08:04:50,008 [printer.py:change_state()] - Adding callback for state: printing
2024-04-23 08:04:50,012 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-23 08:04:50,016 [job_status.py:update_file_metadata()] - Update Metadata. File: PAEXTERNAL.gcode Size: 208294
2024-04-23 08:04:50,016 [job_status.py:show_file_thumbnail()] - PAEXTERNAL.gcode
2024-04-23 08:04:50,017 [job_status.py:show_file_thumbnail()] - no pixbuf
2024-04-23 08:04:50,044 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 08:04:50,045 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 08:04:50,160 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-23 08:04:50,165 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-23 08:04:50,171 [job_status.py:update_file_metadata()] - Update Metadata. File: PAEXTERNAL.gcode Size: 208294
2024-04-23 08:04:50,172 [job_status.py:show_file_thumbnail()] - PAEXTERNAL.gcode
2024-04-23 08:04:50,172 [job_status.py:show_file_thumbnail()] - no pixbuf
2024-04-23 08:05:32,009 [screen.py:show_popup_message()] - echo: Heating Bed
2024-04-23 08:06:06,035 [screen.py:show_popup_message()] - echo: Heat soaking
2024-04-23 08:07:03,657 [screen.py:show_popup_message()] - error: Empty clusters found
2024-04-23 08:07:03,719 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2024-04-23 08:07:03,720 [printer.py:change_state()] - Adding callback for state: ready
2024-04-23 08:07:03,726 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2024-04-23 08:07:55,579 [screen.py:show_popup_message()] - error: // Unknown command:"OBJECT:{""
2024-04-23 08:07:55,596 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-23 08:07:55,596 [printer.py:change_state()] - Adding callback for state: printing
2024-04-23 08:07:55,607 [job_status.py:set_state()] - Changing job_status state from 'error' to 'printing'
2024-04-23 08:07:55,650 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 08:07:55,651 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 08:07:55,769 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-23 08:07:55,773 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-23 08:07:55,780 [job_status.py:update_file_metadata()] - Update Metadata. File: PAEXTERNAL.gcode Size: 208294
2024-04-23 08:07:55,781 [job_status.py:show_file_thumbnail()] - PAEXTERNAL.gcode
2024-04-23 08:07:55,781 [job_status.py:show_file_thumbnail()] - no pixbuf
2024-04-23 08:08:19,609 [screen.py:show_popup_message()] - echo: Heating Bed
2024-04-23 08:08:40,625 [screen.py:show_popup_message()] - echo: Heat soaking
2024-04-23 08:09:32,590 [screen.py:show_popup_message()] - error: Empty clusters found
2024-04-23 08:09:32,710 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2024-04-23 08:09:32,710 [printer.py:change_state()] - Adding callback for state: ready
2024-04-23 08:09:32,716 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2024-04-23 08:10:24,599 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2024-04-23 08:10:24,600 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-23 08:10:24,600 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-23 08:10:24,601 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-23 08:10:24,604 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 08:10:24,605 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 08:10:24,661 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-23 08:10:28,363 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-23 08:10:28,372 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-23 08:10:28,374 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-23 08:10:28,374 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-313-ge87ab4a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-23 08:10:28,384 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-23 08:10:28,409 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-23 08:10:28,414 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'max_accel_to_decel': 10000.0, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-23 08:10:28,419 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-23 08:10:28,421 [printer.py:reinit()] - Klipper version: v0.12.0-113-g28f06a10-dirty
2024-04-23 08:10:28,421 [printer.py:reinit()] - # Extruders: 1
2024-04-23 08:10:28,421 [printer.py:reinit()] - # Temperature devices: 5
2024-04-23 08:10:28,421 [printer.py:reinit()] - # Fans: 6
2024-04-23 08:10:28,421 [printer.py:reinit()] - # Output pins: 1
2024-04-23 08:10:28,421 [printer.py:reinit()] - # Leds: 2
2024-04-23 08:10:28,435 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-23 08:10:28,436 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-23 08:10:28,715 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-23 08:10:28,719 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-23 08:10:28,719 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-23 08:10:28,720 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-23 08:10:28,721 [screen.py:init_klipper()] - Printer initialized
2024-04-23 08:10:28,722 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-23 08:10:28,722 [printer.py:change_state()] - Adding callback for state: startup
2024-04-23 08:10:30,186 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-23 08:10:30,186 [printer.py:change_state()] - Adding callback for state: ready
2024-04-23 08:10:30,189 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 08:10:30,189 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 08:10:30,256 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-23 08:10:30,274 [main_menu.py:add_device()] - Adding device: extruder
2024-04-23 08:10:30,279 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-23 08:10:30,284 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-23 08:10:30,289 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-23 08:10:30,294 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-23 08:10:30,299 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-23 08:10:30,343 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-23 08:10:30,369 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-23 08:10:30,374 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-23 08:10:30,384 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-23 08:10:30,385 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-23 08:10:35,088 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-23 08:10:35,090 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-23 08:10:35,091 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-23 08:10:35,092 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-23 08:10:35,093 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-23 08:10:35,094 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-23 08:10:35,095 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-23 08:10:35,096 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-23 08:10:35,180 [print.py:_callback()] - adding .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-23 08:10:35,218 [print.py:_callback()] - adding .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-23 08:10:35,220 [print.py:_callback()] - adding .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-23 08:10:35,221 [print.py:_callback()] - adding .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-23 08:10:35,224 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Calibration cube-32x32.png. Retrying in 6 seconds
2024-04-23 08:10:35,234 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Calibration cube-400x300.png. Retrying in 6 seconds
2024-04-23 08:10:35,238 [print.py:_callback()] - adding .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-23 08:10:35,245 [print.py:_callback()] - adding .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-23 08:10:35,246 [print.py:_callback()] - adding .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-23 08:10:35,247 [print.py:_callback()] - adding .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-23 08:11:03,466 [files.py:add_file()] - File already exists: PAEXTERNAL.gcode
2024-04-23 08:11:03,469 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:11:03,470 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:11:03,471 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:11:03,472 [print.py:_callback()] - updating PAEXTERNAL.gcode
2024-04-23 08:11:06,778 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-23 08:11:06,778 [printer.py:change_state()] - Adding callback for state: printing
2024-04-23 08:11:06,822 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 08:11:06,822 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 08:11:06,972 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-23 08:11:06,977 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-23 08:11:06,984 [job_status.py:update_file_metadata()] - Update Metadata. File: PAEXTERNAL.gcode Size: 208467
2024-04-23 08:11:06,985 [job_status.py:show_file_thumbnail()] - PAEXTERNAL.gcode
2024-04-23 08:11:06,985 [job_status.py:show_file_thumbnail()] - no pixbuf
2024-04-23 08:11:26,635 [screen.py:show_popup_message()] - echo: Homing
2024-04-23 08:11:38,309 [screen.py:show_popup_message()] - echo: Homing Y Axis
2024-04-23 08:11:44,111 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-23 08:11:49,058 [screen.py:show_popup_message()] - echo: Heat soaking
2024-04-23 08:12:21,211 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-23 08:12:25,315 [screen.py:show_popup_message()] - echo: Setting PA for ABS
2024-04-23 08:13:50,907 [screen.py:show_popup_message()] - echo: Setting PA for ABS
2024-04-23 08:14:05,002 [screen.py:show_popup_message()] - echo: Printing...
2024-04-23 08:17:59,030 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-23 08:17:59,030 [screen.py:show_panel()] - Reinitializing panel
2024-04-23 08:17:59,149 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2024-04-23 08:17:59,891 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=-0.05 MOVE=1'}
2024-04-23 08:18:03,347 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=-0.05 MOVE=1'}
2024-04-23 08:36:52,475 [screen.py:show_popup_message()] - echo: Print Complete
2024-04-23 08:36:52,495 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2024-04-23 08:36:52,496 [printer.py:change_state()] - Adding callback for state: ready
2024-04-23 09:18:03,384 [screen.py:show_screensaver()] - Showing Screensaver
2024-04-24 05:55:45,694 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Calibration cube-32x32.png. Retrying in 6 seconds
2024-04-24 05:55:45,697 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Calibration cube-400x300.png. Retrying in 6 seconds
2024-04-24 05:55:45,697 [files.py:add_file()] - File already exists: SS_ABS_260C_Calibration cube.gcode
2024-04-24 05:55:45,703 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-24 05:55:45,704 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-24 05:55:45,705 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-24 05:55:45,706 [print.py:_callback()] - updating SS_ABS_260C_Calibration cube.gcode
2024-04-24 05:55:45,793 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-24 05:55:45,793 [printer.py:change_state()] - Adding callback for state: printing
2024-04-24 05:55:45,795 [screen.py:close_screensaver()] - Closing Screensaver
2024-04-24 05:55:45,817 [screen.py:wake_screen()] - Screen wake up
2024-04-24 05:55:45,858 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 05:55:45,858 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 05:55:45,974 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-24 05:55:45,981 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-24 05:55:45,988 [job_status.py:update_file_metadata()] - Update Metadata. File: SS_ABS_260C_Calibration cube.gcode Size: 1746737
2024-04-24 05:55:45,993 [job_status.py:show_file_thumbnail()] - SS_ABS_260C_Calibration cube.gcode
2024-04-24 05:56:35,740 [screen.py:show_popup_message()] - echo: Homing
2024-04-24 05:56:42,382 [screen.py:show_popup_message()] - echo: Homing Y Axis
2024-04-24 05:56:45,382 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-24 05:56:48,104 [screen.py:show_popup_message()] - echo: Heating Bed
2024-04-24 06:07:08,686 [screen.py:show_popup_message()] - echo: Heat soaking
2024-04-24 06:07:21,171 [screen.py:show_popup_message()] - error: No trigger on probe after full movement
2024-04-24 06:07:21,381 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2024-04-24 06:07:21,381 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 06:07:21,390 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2024-04-24 06:07:28,945 [job_status.py:close_panel()] - Closing job_status panel
2024-04-24 06:07:28,949 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 06:07:28,949 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 06:07:29,054 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 06:07:29,078 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 06:07:29,083 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 06:07:29,089 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 06:07:29,094 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 06:07:29,099 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 06:07:29,104 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 06:07:29,150 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 06:07:29,914 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 06:07:29,996 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2024-04-24 06:07:30,849 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 Z+50 F600'}
2024-04-24 06:07:30,852 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2024-04-24 06:07:34,791 [screen.py:_load_panel()] - Loading panel: menu
2024-04-24 06:07:34,951 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2024-04-24 06:07:34,975 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2024-04-24 06:07:35,764 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2024-04-24 06:07:36,297 [screen.py:show_popup_message()] - echo: Homing X Axis
2024-04-24 06:07:42,803 [KlippyWebsocket.py:emergency_stop()] - Sending printer.emergency_stop
2024-04-24 06:07:42,982 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2024-04-24 06:07:42,982 [printer.py:change_state()] - Adding callback for state: shutdown
2024-04-24 06:07:42,984 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 06:07:42,985 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 06:07:42,985 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 06:07:43,020 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 06:07:43,963 [KlippyWebsocket.py:restart_firmware()] - Sending printer.firmware_restart
2024-04-24 06:07:44,090 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2024-04-24 06:07:44,091 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 06:07:44,091 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 06:07:44,091 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 06:07:44,092 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 06:07:44,092 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 06:07:44,125 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 06:07:47,359 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 06:07:47,367 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 06:07:47,368 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 06:07:47,368 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-313-ge87ab4a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 06:07:47,378 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 06:07:47,400 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 06:07:47,403 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'max_accel_to_decel': 10000.0, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 06:07:47,407 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 06:07:47,408 [printer.py:reinit()] - Klipper version: v0.12.0-113-g28f06a10-dirty
2024-04-24 06:07:47,408 [printer.py:reinit()] - # Extruders: 1
2024-04-24 06:07:47,409 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 06:07:47,409 [printer.py:reinit()] - # Fans: 6
2024-04-24 06:07:47,409 [printer.py:reinit()] - # Output pins: 1
2024-04-24 06:07:47,409 [printer.py:reinit()] - # Leds: 2
2024-04-24 06:07:47,422 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 06:07:47,424 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 06:07:47,705 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 06:07:47,709 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 06:07:47,709 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 06:07:47,711 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 06:07:47,711 [screen.py:init_klipper()] - Printer initialized
2024-04-24 06:07:47,712 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-24 06:07:47,712 [printer.py:change_state()] - Adding callback for state: startup
2024-04-24 06:07:47,827 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-24 06:07:47,830 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-24 06:07:47,835 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-24 06:07:47,836 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-24 06:07:47,838 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-24 06:07:47,838 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-24 06:07:47,840 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-24 06:07:47,840 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-24 06:07:47,842 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-24 06:07:47,844 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-24 06:07:47,845 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-24 06:07:47,847 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-32x32.png
2024-04-24 06:07:47,848 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-24 06:07:47,849 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-24 06:07:47,850 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-24 06:07:47,851 [print.py:_callback()] - deleting .thumbs/SS_ABS_260C_Calibration cube-400x300.png
2024-04-24 06:07:49,648 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-24 06:07:49,649 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 06:07:49,652 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 06:07:49,652 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 06:07:49,721 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 06:07:49,739 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 06:07:49,744 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 06:07:49,749 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 06:07:49,754 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 06:07:49,759 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 06:07:49,764 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 06:07:49,808 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 06:07:49,835 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 06:07:49,842 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 06:07:49,852 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 06:07:49,853 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 06:07:59,959 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 06:08:00,026 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > extrude
2024-04-24 06:08:00,982 [screen.py:_menu_go_back()] - #### Menu go back
2024-04-24 06:08:01,054 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 06:08:07,998 [main_menu.py:verify_max_temp()] - 240/270
2024-04-24 06:08:07,998 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S240
2024-04-24 06:08:10,311 [main_menu.py:verify_max_temp()] - 110/120
2024-04-24 06:08:10,311 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S110
2024-04-24 06:59:28,651 [screen.py:show_popup_message()] - echo: Homing X Axis
2024-04-24 06:59:32,105 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2024-04-24 06:59:32,106 [printer.py:change_state()] - Adding callback for state: shutdown
2024-04-24 06:59:32,118 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 06:59:32,120 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 06:59:32,121 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 06:59:32,155 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 06:59:37,439 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2024-04-24 06:59:37,439 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 06:59:37,440 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 06:59:37,440 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 06:59:37,442 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 06:59:37,442 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 06:59:37,487 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 06:59:40,358 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 06:59:40,370 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 06:59:40,371 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 06:59:40,372 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-313-ge87ab4a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 06:59:40,380 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 06:59:40,403 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 06:59:40,408 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'max_accel_to_decel': 10000.0, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 06:59:40,413 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 06:59:40,414 [printer.py:reinit()] - Klipper version: v0.12.0-113-g28f06a10-dirty
2024-04-24 06:59:40,414 [printer.py:reinit()] - # Extruders: 1
2024-04-24 06:59:40,414 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 06:59:40,414 [printer.py:reinit()] - # Fans: 6
2024-04-24 06:59:40,414 [printer.py:reinit()] - # Output pins: 1
2024-04-24 06:59:40,414 [printer.py:reinit()] - # Leds: 2
2024-04-24 06:59:40,426 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 06:59:40,428 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 06:59:40,705 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 06:59:40,710 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 06:59:40,710 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 06:59:40,711 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 06:59:40,711 [screen.py:init_klipper()] - Printer initialized
2024-04-24 06:59:40,711 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-24 06:59:40,712 [printer.py:change_state()] - Adding callback for state: startup
2024-04-24 06:59:42,904 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-24 06:59:42,905 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 06:59:42,908 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 06:59:42,908 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 06:59:43,001 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 06:59:43,019 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 06:59:43,024 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 06:59:43,028 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 06:59:43,033 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 06:59:43,038 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 06:59:43,042 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 06:59:43,085 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 06:59:43,111 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 06:59:43,116 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 06:59:43,127 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 06:59:43,128 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 07:08:11,350 [screen.py:show_screensaver()] - Showing Screensaver
2024-04-24 08:51:17,661 [screen.py:close_screensaver()] - Closing Screensaver
2024-04-24 08:51:17,707 [screen.py:wake_screen()] - Screen wake up
2024-04-24 08:51:19,246 [screen.py:_load_panel()] - Loading panel: temperature
2024-04-24 08:51:19,257 [temperature.py:add_device()] - Adding device: extruder
2024-04-24 08:51:19,264 [temperature.py:add_device()] - Adding device: heater_bed
2024-04-24 08:51:19,269 [temperature.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 08:51:19,274 [temperature.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 08:51:19,278 [temperature.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 08:51:19,283 [temperature.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 08:51:19,288 [temperature.py:select_heater()] - Selecting extruder
2024-04-24 08:51:19,288 [temperature.py:select_heater()] - Selecting heater_bed
2024-04-24 08:51:19,330 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > temperature
2024-04-24 08:51:20,805 [temperature.py:set_temperature()] - {'bed': 90.0, 'extruder': 220.0}
2024-04-24 08:51:20,805 [temperature.py:set_temperature()] - {'bed': 90.0, 'extruder': 220.0}
2024-04-24 08:51:20,805 [temperature.py:set_temperature()] - name match extruder
2024-04-24 08:51:20,806 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S220.0
2024-04-24 08:51:20,806 [temperature.py:set_temperature()] - {'bed': 90.0, 'extruder': 220.0}
2024-04-24 08:51:20,806 [temperature.py:set_temperature()] - {'bed': 90.0, 'extruder': 220.0}
2024-04-24 08:51:20,806 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S90.0
2024-04-24 08:59:18,153 [screen.py:show_popup_message()] - echo: Homing X Axis
2024-04-24 08:59:21,770 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2024-04-24 08:59:21,770 [printer.py:change_state()] - Adding callback for state: shutdown
2024-04-24 08:59:21,782 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 08:59:21,784 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 08:59:21,785 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 08:59:21,821 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 08:59:27,243 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2024-04-24 08:59:27,243 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 08:59:27,244 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 08:59:27,244 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 08:59:27,246 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 08:59:27,247 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 08:59:27,299 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 08:59:30,362 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 08:59:30,371 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 08:59:30,372 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 08:59:30,373 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-313-ge87ab4a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 08:59:30,384 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 08:59:30,408 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 08:59:30,411 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'max_accel_to_decel': 10000.0, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 08:59:30,416 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 08:59:30,417 [printer.py:reinit()] - Klipper version: v0.12.0-113-g28f06a10-dirty
2024-04-24 08:59:30,417 [printer.py:reinit()] - # Extruders: 1
2024-04-24 08:59:30,417 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 08:59:30,417 [printer.py:reinit()] - # Fans: 6
2024-04-24 08:59:30,417 [printer.py:reinit()] - # Output pins: 1
2024-04-24 08:59:30,417 [printer.py:reinit()] - # Leds: 2
2024-04-24 08:59:30,429 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 08:59:30,431 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 08:59:30,735 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 08:59:30,738 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 08:59:30,739 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 08:59:30,740 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 08:59:30,741 [screen.py:init_klipper()] - Printer initialized
2024-04-24 08:59:30,742 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-24 08:59:30,742 [printer.py:change_state()] - Adding callback for state: startup
2024-04-24 08:59:32,936 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-24 08:59:32,936 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 08:59:32,940 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 08:59:32,940 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 08:59:33,052 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 08:59:33,078 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 08:59:33,085 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 08:59:33,090 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 08:59:33,095 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 08:59:33,100 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 08:59:33,105 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 08:59:33,149 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 08:59:33,173 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 08:59:33,178 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 08:59:33,191 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 08:59:33,193 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 09:01:13,801 [screen.py:show_popup_message()] - echo: Homing X Axis
2024-04-24 09:01:17,203 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2024-04-24 09:01:17,203 [printer.py:change_state()] - Adding callback for state: shutdown
2024-04-24 09:01:17,218 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:01:17,221 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:01:17,221 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:01:17,256 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:01:19,118 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2024-04-24 09:01:19,119 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 09:01:19,120 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 09:01:19,120 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:01:19,122 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:01:19,122 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:01:19,178 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:01:22,358 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:01:22,367 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:01:22,368 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:01:22,368 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-313-ge87ab4a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:01:22,377 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:01:22,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:01:22,409 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'max_accel_to_decel': 10000.0, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:01:22,415 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:01:22,416 [printer.py:reinit()] - Klipper version: v0.12.0-113-g28f06a10-dirty
2024-04-24 09:01:22,416 [printer.py:reinit()] - # Extruders: 1
2024-04-24 09:01:22,417 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 09:01:22,417 [printer.py:reinit()] - # Fans: 6
2024-04-24 09:01:22,417 [printer.py:reinit()] - # Output pins: 1
2024-04-24 09:01:22,417 [printer.py:reinit()] - # Leds: 2
2024-04-24 09:01:22,430 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:01:22,432 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:01:22,707 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 09:01:22,712 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:01:22,712 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:01:22,713 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:01:22,714 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:01:22,715 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-24 09:01:22,715 [printer.py:change_state()] - Adding callback for state: startup
2024-04-24 09:01:24,655 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-24 09:01:24,656 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 09:01:24,660 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:01:24,660 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:01:24,749 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 09:01:24,767 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 09:01:24,772 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 09:01:24,777 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 09:01:24,782 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 09:01:24,787 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 09:01:24,792 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 09:01:24,837 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 09:01:24,861 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 09:01:24,865 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 09:01:24,876 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 09:01:24,876 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 09:12:27,429 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:12:27,522 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > extrude
2024-04-24 09:12:28,050 [extrude.py:change_speed()] - ### Speed 25
2024-04-24 09:12:28,530 [extrude.py:change_distance()] - ### Distance 25
2024-04-24 09:12:29,466 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M83
2024-04-24 09:12:29,467 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G1 E+25 F1500'}
2024-04-24 09:12:31,146 [extrude.py:change_speed()] - ### Speed 5
2024-04-24 09:12:31,546 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M83
2024-04-24 09:12:31,547 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G1 E+25 F300'}
2024-04-24 09:12:38,756 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M83
2024-04-24 09:12:38,759 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G1 E+25 F300'}
2024-04-24 09:23:38,172 [screen.py:show_popup_message()] - echo: Homing X Axis
2024-04-24 09:23:41,658 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2024-04-24 09:23:41,658 [printer.py:change_state()] - Adding callback for state: shutdown
2024-04-24 09:23:41,677 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:23:41,680 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:23:41,680 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:23:41,735 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:23:46,633 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2024-04-24 09:23:46,634 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 09:23:46,634 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 09:23:46,635 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:23:46,636 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:23:46,636 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:23:46,670 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:23:50,361 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:23:50,372 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:23:50,373 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:23:50,374 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-313-ge87ab4a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:23:50,385 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:23:50,407 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:23:50,412 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'max_accel_to_decel': 10000.0, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:23:50,417 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:23:50,419 [printer.py:reinit()] - Klipper version: v0.12.0-113-g28f06a10-dirty
2024-04-24 09:23:50,419 [printer.py:reinit()] - # Extruders: 1
2024-04-24 09:23:50,419 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 09:23:50,419 [printer.py:reinit()] - # Fans: 6
2024-04-24 09:23:50,419 [printer.py:reinit()] - # Output pins: 1
2024-04-24 09:23:50,419 [printer.py:reinit()] - # Leds: 2
2024-04-24 09:23:50,433 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:23:50,435 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:23:50,714 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 09:23:50,717 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:23:50,718 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:23:50,719 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:23:50,720 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:23:50,720 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-24 09:23:50,720 [printer.py:change_state()] - Adding callback for state: startup
2024-04-24 09:23:52,158 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-24 09:23:52,159 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 09:23:52,164 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:23:52,165 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:23:52,268 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 09:23:52,286 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 09:23:52,291 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 09:23:52,296 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 09:23:52,301 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 09:23:52,308 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 09:23:52,315 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 09:23:52,364 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 09:23:52,392 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 09:23:52,398 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 09:23:52,414 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 09:23:52,414 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 09:24:00,771 [screen.py:show_popup_message()] - echo: Homing Y Axis
2024-04-24 09:24:04,436 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2024-04-24 09:24:04,436 [printer.py:change_state()] - Adding callback for state: shutdown
2024-04-24 09:24:04,458 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:24:04,463 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:24:04,463 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:24:04,523 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:24:13,989 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2024-04-24 09:24:13,989 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 09:24:13,990 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 09:24:13,991 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:24:13,993 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:24:13,994 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:24:14,057 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:24:17,357 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:24:17,365 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:24:17,366 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:24:17,367 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-313-ge87ab4a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:24:17,376 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:24:17,399 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:24:17,403 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'max_accel_to_decel': 10000.0, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:24:17,408 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:24:17,409 [printer.py:reinit()] - Klipper version: v0.12.0-113-g28f06a10-dirty
2024-04-24 09:24:17,409 [printer.py:reinit()] - # Extruders: 1
2024-04-24 09:24:17,409 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 09:24:17,409 [printer.py:reinit()] - # Fans: 6
2024-04-24 09:24:17,409 [printer.py:reinit()] - # Output pins: 1
2024-04-24 09:24:17,409 [printer.py:reinit()] - # Leds: 2
2024-04-24 09:24:17,421 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:24:17,423 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:24:17,661 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 09:24:17,665 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:24:17,665 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:24:17,670 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:24:17,676 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:24:17,676 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-24 09:24:17,677 [printer.py:change_state()] - Adding callback for state: startup
2024-04-24 09:24:19,392 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-24 09:24:19,392 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 09:24:19,397 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:24:19,397 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:24:19,504 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 09:24:19,522 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 09:24:19,528 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 09:24:19,533 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 09:24:19,538 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 09:24:19,543 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 09:24:19,548 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 09:24:19,592 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 09:24:19,616 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 09:24:19,621 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 09:24:19,637 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 09:24:19,638 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 09:26:15,741 [KlippyGtk.py:Dialog()] - Showing dialog Updating (width=800, height=480)
2024-04-24 09:27:44,869 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2024-04-24 09:27:44,870 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 09:27:45,147 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 09:27:45,148 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:27:45,151 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:27:45,151 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:27:45,189 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:27:48,374 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:27:48,384 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:27:48,385 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:27:48,385 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-313-ge87ab4a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:27:48,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:27:48,419 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:27:48,423 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'minimum_cruise_ratio': 0.5, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:27:48,427 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:27:48,429 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-24 09:27:48,429 [printer.py:reinit()] - # Extruders: 1
2024-04-24 09:27:48,429 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 09:27:48,429 [printer.py:reinit()] - # Fans: 6
2024-04-24 09:27:48,429 [printer.py:reinit()] - # Output pins: 1
2024-04-24 09:27:48,429 [printer.py:reinit()] - # Leds: 2
2024-04-24 09:27:48,441 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:27:48,443 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:27:48,944 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 09:27:48,955 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:27:48,955 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:27:48,962 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:27:48,963 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:27:48,964 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-24 09:27:48,964 [printer.py:change_state()] - Adding callback for state: startup
2024-04-24 09:27:50,913 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-24 09:27:50,913 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 09:27:50,916 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:27:50,916 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:27:50,993 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 09:27:51,011 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 09:27:51,016 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 09:27:51,022 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 09:27:51,027 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 09:27:51,033 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 09:27:51,038 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 09:27:51,085 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 09:27:51,115 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 09:27:51,121 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 09:27:51,132 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 09:27:51,133 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 09:27:58,331 [KlippyWebsocket.py:on_close()] - Server Shutdown
2024-04-24 09:27:58,332 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2024-04-24 09:27:58,609 [base_panel.py:process_update()] - Update complete
2024-04-24 09:27:58,610 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2024-04-24 09:27:58,612 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:27:58,613 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:27:58,675 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:27:58,717 [screen.py:connect_printer()] - Connecting to printer: Printer
2024-04-24 09:27:58,718 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:27:58,719 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:27:58,754 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:27:58,761 [KlippyWebsocket.py:connect()] - Attempting to connect
2024-04-24 09:27:58,766 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2024-04-24 09:28:09,353 [KlippyWebsocket.py:connect()] - Attempting to connect
2024-04-24 09:28:09,373 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:28:09,389 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2024-04-24 09:28:09,391 [KlippyWebsocket.py:connect()] - Starting websocket thread
2024-04-24 09:28:09,407 [_logging.py:info()] - Websocket connected
2024-04-24 09:28:09,407 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2024-04-24 09:28:09,423 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:28:09,439 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:28:09,441 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:28:09,441 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:28:09,458 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:28:09,650 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:28:09,654 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1.2', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.2, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'minimum_cruise_ratio': 0.5, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:28:09,658 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:28:09,660 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-24 09:28:09,660 [printer.py:reinit()] - # Extruders: 1
2024-04-24 09:28:09,660 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 09:28:09,660 [printer.py:reinit()] - # Fans: 6
2024-04-24 09:28:09,660 [printer.py:reinit()] - # Output pins: 1
2024-04-24 09:28:09,660 [printer.py:reinit()] - # Leds: 2
2024-04-24 09:28:09,671 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:28:09,675 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:28:09,956 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 09:28:09,961 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:28:09,961 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:28:09,962 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:28:09,963 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:28:09,963 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2024-04-24 09:28:09,963 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 09:28:09,966 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:28:09,967 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:28:10,040 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 09:28:10,059 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 09:28:10,064 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 09:28:10,070 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 09:28:10,075 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 09:28:10,080 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 09:28:10,097 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 09:28:10,141 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 09:28:10,149 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 09:28:10,165 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 09:28:10,174 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 09:28:10,175 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 09:28:10,198 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home
2024-04-24 09:28:10,198 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Test Prints
2024-04-24 09:28:10,199 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/3DP
2024-04-24 09:28:10,199 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration
2024-04-24 09:28:10,385 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Bambu Lamp
2024-04-24 09:28:10,387 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Robak 2
2024-04-24 09:28:10,387 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Swift Hub
2024-04-24 09:28:10,388 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Tools
2024-04-24 09:28:10,388 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Halloween
2024-04-24 09:28:10,389 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/IKEA
2024-04-24 09:28:10,389 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Mia
2024-04-24 09:28:10,390 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/3DP/TD-1
2024-04-24 09:28:10,391 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration/Voron Cube
2024-04-24 09:28:10,392 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration/Extrusion Multiplier
2024-04-24 09:28:10,393 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration/First Layer
2024-04-24 09:28:10,461 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Robak 2/Calibration
2024-04-24 09:29:47,418 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2024-04-24 09:29:47,418 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 09:29:47,419 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 09:29:47,419 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:29:47,421 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:29:47,421 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:29:47,465 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:29:50,356 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:29:50,365 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:29:50,366 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:29:50,366 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:29:50,375 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:29:50,400 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:29:50,404 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.0460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'minimum_cruise_ratio': 0.5, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:29:50,408 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:29:50,411 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-24 09:29:50,411 [printer.py:reinit()] - # Extruders: 1
2024-04-24 09:29:50,411 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 09:29:50,411 [printer.py:reinit()] - # Fans: 6
2024-04-24 09:29:50,411 [printer.py:reinit()] - # Output pins: 1
2024-04-24 09:29:50,411 [printer.py:reinit()] - # Leds: 2
2024-04-24 09:29:50,423 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:29:50,425 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:29:50,764 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 09:29:50,768 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:29:50,768 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:29:50,768 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:29:50,770 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:29:50,771 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-24 09:29:50,771 [printer.py:change_state()] - Adding callback for state: startup
2024-04-24 09:29:52,892 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-24 09:29:52,892 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 09:29:52,895 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:29:52,895 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:29:52,965 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 09:29:52,982 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 09:29:52,987 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 09:29:52,993 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 09:29:52,997 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 09:29:53,003 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 09:29:53,008 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 09:29:53,053 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 09:29:53,063 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 09:29:53,079 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 09:29:53,089 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 09:29:53,091 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 09:30:10,984 [screen.py:show_popup_message()] - echo: Homing X Axis
2024-04-24 09:30:17,983 [screen.py:show_popup_message()] - echo: Homing Y Axis
2024-04-24 09:30:24,851 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-24 09:43:55,358 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Front_Skirt_Left_160_x1-32x32.png. Retrying in 6 seconds
2024-04-24 09:43:55,359 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Front_Skirt_Left_160_x1-400x300.png. Retrying in 6 seconds
2024-04-24 09:43:55,544 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-24 09:43:55,545 [printer.py:change_state()] - Adding callback for state: printing
2024-04-24 09:43:55,557 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:43:55,558 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:43:55,679 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-24 09:43:55,684 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-24 09:43:55,691 [job_status.py:update_file_metadata()] - Update Metadata. File: SS_ABS_260C_Front_Skirt_Left_160_x1.gcode Size: 11843744
2024-04-24 09:43:55,697 [job_status.py:show_file_thumbnail()] - SS_ABS_260C_Front_Skirt_Left_160_x1.gcode
2024-04-24 09:44:43,438 [screen.py:show_popup_message()] - echo: Heating Bed
2024-04-24 09:48:56,810 [screen.py:show_popup_message()] - echo: Heat soaking
2024-04-24 09:49:28,588 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-24 09:49:32,693 [screen.py:show_popup_message()] - echo: Setting PA for ABS
2024-04-24 09:50:25,958 [screen.py:show_popup_message()] - error: Internal error on command:"_BED_MESH_CALIBRATE"
2024-04-24 09:50:26,011 [printer.py:change_state()] - Changing state from 'printing' to 'shutdown'
2024-04-24 09:50:26,012 [printer.py:change_state()] - Adding callback for state: shutdown
2024-04-24 09:50:26,016 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2024-04-24 09:50:26,051 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:50:26,054 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:50:26,054 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:50:26,089 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:50:26,997 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2024-04-24 09:50:26,997 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 09:50:26,998 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 09:50:26,998 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:50:26,999 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:50:27,000 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:50:27,035 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:50:30,372 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:50:30,389 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:50:30,391 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:50:30,392 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:50:30,413 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:50:30,475 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:50:30,479 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n{% if FILAMENT == \'ABS\' or FILAMENT == \'ASA\' %}\nDISPLAYTEXT TEXT="Heat soaking"\nTEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}\n{% endif %}\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'minimum_cruise_ratio': 0.5, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:50:30,483 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:50:30,484 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-24 09:50:30,484 [printer.py:reinit()] - # Extruders: 1
2024-04-24 09:50:30,484 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 09:50:30,484 [printer.py:reinit()] - # Fans: 6
2024-04-24 09:50:30,485 [printer.py:reinit()] - # Output pins: 1
2024-04-24 09:50:30,485 [printer.py:reinit()] - # Leds: 2
2024-04-24 09:50:30,497 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:50:30,498 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:50:30,782 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 09:50:30,786 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:50:30,786 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:50:30,786 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:50:30,787 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:50:30,787 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-24 09:50:30,787 [printer.py:change_state()] - Adding callback for state: startup
2024-04-24 09:50:32,718 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-24 09:50:32,718 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 09:50:32,721 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:50:32,722 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:50:32,801 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 09:50:32,819 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 09:50:32,824 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 09:50:32,829 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 09:50:32,834 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 09:50:32,840 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 09:50:32,846 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 09:50:32,891 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 09:50:32,914 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 09:50:32,920 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 09:50:32,930 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 09:50:32,931 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 09:51:52,491 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2024-04-24 09:51:52,491 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 09:51:52,492 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 09:51:52,492 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:51:52,495 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:51:52,496 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:51:52,528 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:51:55,357 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:51:55,366 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:51:55,367 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:51:55,368 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:51:55,377 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:51:55,411 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:51:55,412 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:51:55,413 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:51:55,414 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-24 09:51:55,414 [printer.py:reinit()] - # Extruders: 0
2024-04-24 09:51:55,414 [printer.py:reinit()] - # Temperature devices: 0
2024-04-24 09:51:55,414 [printer.py:reinit()] - # Fans: 0
2024-04-24 09:51:55,414 [printer.py:reinit()] - # Output pins: 0
2024-04-24 09:51:55,414 [printer.py:reinit()] - # Leds: 0
2024-04-24 09:51:55,425 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:51:55,425 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:51:55,664 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2024-04-24 09:51:55,666 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:51:55,666 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:51:55,670 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:51:55,670 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:51:55,671 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2024-04-24 09:51:55,671 [printer.py:change_state()] - Adding callback for state: error
2024-04-24 09:51:55,673 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:51:55,673 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:51:55,709 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:52:24,677 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2024-04-24 09:52:24,677 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 09:52:24,679 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 09:52:24,680 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:52:24,683 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:52:24,683 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:52:24,743 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:52:28,358 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:52:28,366 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:52:28,367 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:52:28,368 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:52:28,377 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:52:28,551 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:52:28,552 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:52:28,552 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:52:28,553 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-24 09:52:28,553 [printer.py:reinit()] - # Extruders: 0
2024-04-24 09:52:28,553 [printer.py:reinit()] - # Temperature devices: 0
2024-04-24 09:52:28,553 [printer.py:reinit()] - # Fans: 0
2024-04-24 09:52:28,553 [printer.py:reinit()] - # Output pins: 0
2024-04-24 09:52:28,553 [printer.py:reinit()] - # Leds: 0
2024-04-24 09:52:28,564 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:52:28,565 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:52:28,805 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2024-04-24 09:52:28,806 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:52:28,806 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:52:28,806 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:52:28,807 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:52:28,807 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2024-04-24 09:52:28,807 [printer.py:change_state()] - Adding callback for state: error
2024-04-24 09:52:28,809 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:52:28,809 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:52:28,846 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:52:36,923 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2024-04-24 09:52:36,923 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 09:52:36,925 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 09:52:36,926 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:52:36,930 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:52:36,930 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:52:37,008 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:52:40,356 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:52:40,365 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:52:40,365 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:52:40,365 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:52:40,375 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:52:40,527 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:52:40,527 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:52:40,528 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:52:40,528 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-24 09:52:40,528 [printer.py:reinit()] - # Extruders: 0
2024-04-24 09:52:40,528 [printer.py:reinit()] - # Temperature devices: 0
2024-04-24 09:52:40,528 [printer.py:reinit()] - # Fans: 0
2024-04-24 09:52:40,528 [printer.py:reinit()] - # Output pins: 0
2024-04-24 09:52:40,528 [printer.py:reinit()] - # Leds: 0
2024-04-24 09:52:40,538 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:52:40,539 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:52:40,781 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2024-04-24 09:52:40,782 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:52:40,782 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:52:40,782 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:52:40,783 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:52:40,783 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2024-04-24 09:52:40,783 [printer.py:change_state()] - Adding callback for state: error
2024-04-24 09:52:40,785 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:52:40,785 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:52:40,822 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:52:55,064 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2024-04-24 09:52:55,064 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-24 09:52:55,066 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-24 09:52:55,066 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:52:55,069 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:52:55,069 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:52:55,129 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-24 09:52:58,358 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-24 09:52:58,367 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-24 09:52:58,369 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-24 09:52:58,369 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-24 09:52:58,396 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-24 09:52:58,418 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-24 09:52:58,421 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.04000'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.036211, 0.001543, 0.030214\n-0.055827, -0.013578, 0.023931\n-0.066476, -0.023619, 0.018516', 'x_count': '3', 'y_count': '3', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '135.0', 'max_x': '165.0', 'min_y': '135.0', 'max_y': '165.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.036211, 0.001543, 0.030214], [-0.055827, -0.013578, 0.023931], [-0.066476, -0.023619, 0.018516]], 'min_x': 135.0, 'max_x': 165.0, 'min_y': 135.0, 'max_y': 165.0, 'x_count': 3, 'y_count': 3, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.0525', 'variable_pet_pa': '0.0650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.04}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'minimum_cruise_ratio': 0.5, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-24 09:52:58,425 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-24 09:52:58,426 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-24 09:52:58,426 [printer.py:reinit()] - # Extruders: 1
2024-04-24 09:52:58,426 [printer.py:reinit()] - # Temperature devices: 5
2024-04-24 09:52:58,426 [printer.py:reinit()] - # Fans: 6
2024-04-24 09:52:58,426 [printer.py:reinit()] - # Output pins: 1
2024-04-24 09:52:58,426 [printer.py:reinit()] - # Leds: 2
2024-04-24 09:52:58,439 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-24 09:52:58,441 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-24 09:52:58,727 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-24 09:52:58,730 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-24 09:52:58,730 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-24 09:52:58,732 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-24 09:52:58,733 [screen.py:init_klipper()] - Printer initialized
2024-04-24 09:52:58,734 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-24 09:52:58,734 [printer.py:change_state()] - Adding callback for state: startup
2024-04-24 09:53:00,664 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-24 09:53:00,665 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 09:53:00,669 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:53:00,669 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:53:00,737 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-24 09:53:00,758 [main_menu.py:add_device()] - Adding device: extruder
2024-04-24 09:53:00,762 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-24 09:53:00,767 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-24 09:53:00,772 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-24 09:53:00,777 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-24 09:53:00,782 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-24 09:53:00,825 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-24 09:53:00,847 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-24 09:53:00,852 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-24 09:53:00,861 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-24 09:53:00,862 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-24 09:53:07,185 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-24 09:53:07,186 [printer.py:change_state()] - Adding callback for state: printing
2024-04-24 09:53:07,216 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-24 09:53:07,217 [screen.py:show_panel()] - Reinitializing panel
2024-04-24 09:53:07,336 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-24 09:53:07,341 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-24 09:53:07,348 [job_status.py:update_file_metadata()] - Update Metadata. File: SS_ABS_260C_Front_Skirt_Left_160_x1.gcode Size: 11843744
2024-04-24 09:53:07,354 [job_status.py:show_file_thumbnail()] - SS_ABS_260C_Front_Skirt_Left_160_x1.gcode
2024-04-24 09:53:37,306 [screen.py:show_popup_message()] - echo: Homing
2024-04-24 09:53:46,235 [screen.py:show_popup_message()] - echo: Homing Y Axis
2024-04-24 09:53:50,377 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-24 09:54:03,341 [screen.py:show_popup_message()] - echo: Z tilt thingy
2024-04-24 09:54:35,485 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-24 09:54:39,563 [screen.py:show_popup_message()] - echo: No PA value for 
2024-04-24 09:55:51,275 [screen.py:show_popup_message()] - echo: No PA value for 
2024-04-24 09:56:06,809 [screen.py:show_popup_message()] - echo: Printing...
2024-04-24 10:12:39,348 [screen.py:show_screensaver()] - Showing Screensaver
2024-04-24 10:12:39,348 [screen.py:show_screensaver()] - Hiding dialog
2024-04-24 12:36:43,026 [screen.py:close_screensaver()] - Closing Screensaver
2024-04-24 12:36:43,055 [screen.py:wake_screen()] - Screen wake up
2024-04-24 12:36:43,096 [screen.py:close_screensaver()] - Restoring Dialog <Gtk.Dialog object at 0x7f8616bd40 (GtkDialog at 0x652b980)>
2024-04-24 12:36:43,101 [screen.py:show_popup_message()] - error: // Unknown command:"NEVERMORE_END_PRINT"
2024-04-24 12:36:43,119 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2024-04-24 12:36:43,119 [printer.py:change_state()] - Adding callback for state: ready
2024-04-24 12:36:43,126 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2024-04-24 13:36:43,349 [screen.py:show_screensaver()] - Showing Screensaver
2024-04-24 13:36:43,350 [screen.py:show_screensaver()] - Hiding dialog
2024-04-25 07:10:04,676 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2024-04-25 07:10:06,635 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2024-04-25 07:10:06,636 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-25 07:10:06,636 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-25 07:10:06,637 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-25 07:10:06,637 [screen.py:close_screensaver()] - Closing Screensaver
2024-04-25 07:10:06,661 [screen.py:wake_screen()] - Screen wake up
2024-04-25 07:10:06,700 [screen.py:close_screensaver()] - Restoring Dialog <Gtk.Dialog object at 0x7f8616bd40 (GtkDialog at 0x652b980)>
2024-04-25 07:10:06,704 [screen.py:close_screensaver()] - Restoring Dialog <Gtk.Dialog object at 0x7f8c117840 (GtkDialog at 0x4ccc8b0)>
2024-04-25 07:10:06,706 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-25 07:10:06,706 [screen.py:show_panel()] - Reinitializing panel
2024-04-25 07:10:06,740 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-25 07:10:10,360 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-25 07:10:10,371 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-25 07:10:10,372 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-25 07:10:10,372 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-25 07:10:10,382 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-25 07:10:10,405 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-25 07:10:10,409 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.00525', 'variable_pet_pa': '0.00650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.02500'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.062140, -0.036984, -0.007379, 0.031314, 0.058627, 0.084848, 0.107257, 0.111945, 0.135207, 0.152355, 0.170171\n-0.128044, -0.093273, -0.053917, -0.019434, 0.015362, 0.051030, 0.076081, 0.091292, 0.113629, 0.133648, 0.155842\n-0.171323, -0.136118, -0.096393, -0.057201, -0.010727, 0.024397, 0.048697, 0.072530, 0.099236, 0.126818, 0.150713\n-0.201543, -0.161727, -0.119034, -0.066854, -0.018463, 0.014217, 0.047420, 0.076211, 0.103883, 0.134441, 0.171920\n-0.229879, -0.188570, -0.139992, -0.085341, -0.040984, 0.002604, 0.042138, 0.073877, 0.104620, 0.133705, 0.171879\n-0.263766, -0.213518, -0.162008, -0.108459, -0.058518, -0.007646, 0.032310, 0.069869, 0.102956, 0.138912, 0.180918\n-0.296565, -0.242362, -0.188285, -0.127789, -0.071974, -0.019641, 0.027806, 0.070759, 0.105252, 0.142100, 0.184275\n-0.296242, -0.233747, -0.171416, -0.107834, -0.048348, 0.004540, 0.056827, 0.100566, 0.141602, 0.182628, 0.230079\n-0.281192, -0.228380, -0.164876, -0.101596, -0.030960, 0.023575, 0.079761, 0.121563, 0.171967, 0.216584, 0.265930\n-0.307454, -0.252371, -0.190633, -0.113183, -0.041936, 0.019598, 0.074971, 0.120663, 0.178367, 0.230549, 0.282552\n-0.324293, -0.258430, -0.193413, -0.119856, -0.045648, 0.021113, 0.080729, 0.133249, 0.192194, 0.246004, 0.297448', 'x_count': '11', 'y_count': '11', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '59.444', 'max_x': '240.556', 'min_y': '75.541944', 'max_y': '224.458048'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.06214, -0.036984, -0.007379, 0.031314, 0.058627, 0.084848, 0.107257, 0.111945, 0.135207, 0.152355, 0.170171], [-0.128044, -0.093273, -0.053917, -0.019434, 0.015362, 0.05103, 0.076081, 0.091292, 0.113629, 0.133648, 0.155842], [-0.171323, -0.136118, -0.096393, -0.057201, -0.010727, 0.024397, 0.048697, 0.07253, 0.099236, 0.126818, 0.150713], [-0.201543, -0.161727, -0.119034, -0.066854, -0.018463, 0.014217, 0.04742, 0.076211, 0.103883, 0.134441, 0.17192], [-0.229879, -0.18857, -0.139992, -0.085341, -0.040984, 0.002604, 0.042138, 0.073877, 0.10462, 0.133705, 0.171879], [-0.263766, -0.213518, -0.162008, -0.108459, -0.058518, -0.007646, 0.03231, 0.069869, 0.102956, 0.138912, 0.180918], [-0.296565, -0.242362, -0.188285, -0.127789, -0.071974, -0.019641, 0.027806, 0.070759, 0.105252, 0.1421, 0.184275], [-0.296242, -0.233747, -0.171416, -0.107834, -0.048348, 0.00454, 0.056827, 0.100566, 0.141602, 0.182628, 0.230079], [-0.281192, -0.22838, -0.164876, -0.101596, -0.03096, 0.023575, 0.079761, 0.121563, 0.171967, 0.216584, 0.26593], [-0.307454, -0.252371, -0.190633, -0.113183, -0.041936, 0.019598, 0.074971, 0.120663, 0.178367, 0.230549, 0.282552], [-0.324293, -0.25843, -0.193413, -0.119856, -0.045648, 0.021113, 0.080729, 0.133249, 0.192194, 0.246004, 0.297448]], 'min_x': 59.444, 'max_x': 240.556, 'min_y': 75.541944, 'max_y': 224.458048, 'x_count': 11, 'y_count': 11, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.00525', 'variable_pet_pa': '0.00650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.025}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'minimum_cruise_ratio': 0.5, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-25 07:10:10,414 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-25 07:10:10,416 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-25 07:10:10,416 [printer.py:reinit()] - # Extruders: 1
2024-04-25 07:10:10,416 [printer.py:reinit()] - # Temperature devices: 5
2024-04-25 07:10:10,416 [printer.py:reinit()] - # Fans: 6
2024-04-25 07:10:10,416 [printer.py:reinit()] - # Output pins: 1
2024-04-25 07:10:10,416 [printer.py:reinit()] - # Leds: 2
2024-04-25 07:10:10,430 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-25 07:10:10,433 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-25 07:10:10,737 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-25 07:10:10,747 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-25 07:10:10,747 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-25 07:10:10,754 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-25 07:10:10,760 [screen.py:init_klipper()] - Printer initialized
2024-04-25 07:10:10,762 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-25 07:10:10,762 [printer.py:change_state()] - Adding callback for state: startup
2024-04-25 07:10:12,399 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-25 07:10:12,400 [printer.py:change_state()] - Adding callback for state: ready
2024-04-25 07:10:12,403 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-25 07:10:12,403 [screen.py:show_panel()] - Reinitializing panel
2024-04-25 07:10:12,473 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-25 07:10:12,496 [main_menu.py:add_device()] - Adding device: extruder
2024-04-25 07:10:12,501 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-25 07:10:12,506 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-25 07:10:12,512 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-25 07:10:12,517 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-25 07:10:12,521 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-25 07:10:12,566 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-25 07:10:12,589 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-25 07:10:12,594 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-25 07:10:12,604 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-25 07:10:12,605 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-25 07:10:23,342 [screen.py:show_popup_message()] - echo: Homing X Axis
2024-04-25 07:10:32,233 [screen.py:show_popup_message()] - echo: Homing Y Axis
2024-04-25 07:10:34,881 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-25 07:13:28,738 [screen.py:show_popup_message()] - echo: Homing Z Axis
2024-04-25 07:16:22,426 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Rear_Center_Skirt_160_x1-32x32.png. Retrying in 6 seconds
2024-04-25 07:16:22,427 [files.py:_callback()] - Error in getting metadata for .thumbs/SS_ABS_260C_Rear_Center_Skirt_160_x1-400x300.png. Retrying in 6 seconds
2024-04-25 07:16:22,653 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2024-04-25 07:16:22,653 [printer.py:change_state()] - Adding callback for state: printing
2024-04-25 07:16:22,680 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-25 07:16:22,680 [screen.py:show_panel()] - Reinitializing panel
2024-04-25 07:16:22,834 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2024-04-25 07:16:22,838 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2024-04-25 07:16:22,847 [job_status.py:update_file_metadata()] - Update Metadata. File: SS_ABS_260C_Rear_Center_Skirt_160_x1.gcode Size: 16261672
2024-04-25 07:16:22,854 [job_status.py:show_file_thumbnail()] - SS_ABS_260C_Rear_Center_Skirt_160_x1.gcode
2024-04-25 07:17:02,463 [screen.py:show_popup_message()] - echo: Heating Bed
2024-04-25 07:27:38,094 [screen.py:show_popup_message()] - echo: No PA value for 
2024-04-25 07:29:10,702 [screen.py:show_popup_message()] - echo: No PA value for 
2024-04-25 07:29:26,592 [screen.py:show_popup_message()] - echo: Printing...
2024-04-25 08:30:28,349 [screen.py:show_screensaver()] - Showing Screensaver
2024-04-25 08:30:28,349 [screen.py:show_screensaver()] - Hiding dialog
2024-04-25 08:30:28,351 [screen.py:show_screensaver()] - Hiding dialog
2024-04-25 11:41:11,616 [screen.py:close_screensaver()] - Closing Screensaver
2024-04-25 11:41:11,644 [screen.py:wake_screen()] - Screen wake up
2024-04-25 11:41:11,684 [screen.py:close_screensaver()] - Restoring Dialog <Gtk.Dialog object at 0x7f8616bd40 (GtkDialog at 0x652b980)>
2024-04-25 11:41:11,688 [screen.py:close_screensaver()] - Restoring Dialog <Gtk.Dialog object at 0x7f8c117840 (GtkDialog at 0x4ccc8b0)>
2024-04-25 11:41:11,691 [screen.py:show_popup_message()] - error: // Unknown command:"NEVERMORE_END_PRINT"
2024-04-25 11:41:11,764 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2024-04-25 11:41:11,764 [printer.py:change_state()] - Adding callback for state: ready
2024-04-25 11:41:11,772 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2024-04-25 12:41:12,350 [screen.py:show_screensaver()] - Showing Screensaver
2024-04-25 12:41:12,351 [screen.py:show_screensaver()] - Hiding dialog
2024-04-25 12:41:12,354 [screen.py:show_screensaver()] - Hiding dialog
2024-04-28 06:49:07,746 [KlippyWebsocket.py:on_close()] - Server Shutdown
2024-04-28 06:49:07,747 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2024-04-28 06:49:07,747 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2024-04-28 06:49:07,748 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 06:49:07,748 [screen.py:close_screensaver()] - Closing Screensaver
2024-04-28 06:49:07,801 [screen.py:wake_screen()] - Screen wake up
2024-04-28 06:49:07,844 [screen.py:close_screensaver()] - Restoring Dialog <Gtk.Dialog object at 0x7f8616bd40 (GtkDialog at 0x652b980)>
2024-04-28 06:49:07,848 [screen.py:close_screensaver()] - Restoring Dialog <Gtk.Dialog object at 0x7f8c117840 (GtkDialog at 0x4ccc8b0)>
2024-04-28 06:49:07,851 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 06:49:07,929 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 06:49:07,970 [screen.py:connect_printer()] - Connecting to printer: Printer
2024-04-28 06:49:07,971 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 06:49:07,972 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 06:49:08,005 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 06:49:08,013 [KlippyWebsocket.py:connect()] - Attempting to connect
2024-04-28 06:49:08,018 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2024-04-28 06:49:18,352 [KlippyWebsocket.py:connect()] - Attempting to connect
2024-04-28 06:49:18,374 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-28 06:49:18,390 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2024-04-28 06:49:18,391 [KlippyWebsocket.py:connect()] - Starting websocket thread
2024-04-28 06:49:18,405 [_logging.py:info()] - Websocket connected
2024-04-28 06:49:18,405 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2024-04-28 06:49:18,421 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-28 06:49:18,432 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-28 06:49:18,433 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-28 06:49:18,434 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'timelapse', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-28 06:49:18,447 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-28 06:49:18,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-28 06:49:18,553 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.00525', 'variable_pet_pa': '0.00650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.02500'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.062140, -0.036984, -0.007379, 0.031314, 0.058627, 0.084848, 0.107257, 0.111945, 0.135207, 0.152355, 0.170171\n-0.128044, -0.093273, -0.053917, -0.019434, 0.015362, 0.051030, 0.076081, 0.091292, 0.113629, 0.133648, 0.155842\n-0.171323, -0.136118, -0.096393, -0.057201, -0.010727, 0.024397, 0.048697, 0.072530, 0.099236, 0.126818, 0.150713\n-0.201543, -0.161727, -0.119034, -0.066854, -0.018463, 0.014217, 0.047420, 0.076211, 0.103883, 0.134441, 0.171920\n-0.229879, -0.188570, -0.139992, -0.085341, -0.040984, 0.002604, 0.042138, 0.073877, 0.104620, 0.133705, 0.171879\n-0.263766, -0.213518, -0.162008, -0.108459, -0.058518, -0.007646, 0.032310, 0.069869, 0.102956, 0.138912, 0.180918\n-0.296565, -0.242362, -0.188285, -0.127789, -0.071974, -0.019641, 0.027806, 0.070759, 0.105252, 0.142100, 0.184275\n-0.296242, -0.233747, -0.171416, -0.107834, -0.048348, 0.004540, 0.056827, 0.100566, 0.141602, 0.182628, 0.230079\n-0.281192, -0.228380, -0.164876, -0.101596, -0.030960, 0.023575, 0.079761, 0.121563, 0.171967, 0.216584, 0.265930\n-0.307454, -0.252371, -0.190633, -0.113183, -0.041936, 0.019598, 0.074971, 0.120663, 0.178367, 0.230549, 0.282552\n-0.324293, -0.258430, -0.193413, -0.119856, -0.045648, 0.021113, 0.080729, 0.133249, 0.192194, 0.246004, 0.297448', 'x_count': '11', 'y_count': '11', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '59.444', 'max_x': '240.556', 'min_y': '75.541944', 'max_y': '224.458048'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.06214, -0.036984, -0.007379, 0.031314, 0.058627, 0.084848, 0.107257, 0.111945, 0.135207, 0.152355, 0.170171], [-0.128044, -0.093273, -0.053917, -0.019434, 0.015362, 0.05103, 0.076081, 0.091292, 0.113629, 0.133648, 0.155842], [-0.171323, -0.136118, -0.096393, -0.057201, -0.010727, 0.024397, 0.048697, 0.07253, 0.099236, 0.126818, 0.150713], [-0.201543, -0.161727, -0.119034, -0.066854, -0.018463, 0.014217, 0.04742, 0.076211, 0.103883, 0.134441, 0.17192], [-0.229879, -0.18857, -0.139992, -0.085341, -0.040984, 0.002604, 0.042138, 0.073877, 0.10462, 0.133705, 0.171879], [-0.263766, -0.213518, -0.162008, -0.108459, -0.058518, -0.007646, 0.03231, 0.069869, 0.102956, 0.138912, 0.180918], [-0.296565, -0.242362, -0.188285, -0.127789, -0.071974, -0.019641, 0.027806, 0.070759, 0.105252, 0.1421, 0.184275], [-0.296242, -0.233747, -0.171416, -0.107834, -0.048348, 0.00454, 0.056827, 0.100566, 0.141602, 0.182628, 0.230079], [-0.281192, -0.22838, -0.164876, -0.101596, -0.03096, 0.023575, 0.079761, 0.121563, 0.171967, 0.216584, 0.26593], [-0.307454, -0.252371, -0.190633, -0.113183, -0.041936, 0.019598, 0.074971, 0.120663, 0.178367, 0.230549, 0.282552], [-0.324293, -0.25843, -0.193413, -0.119856, -0.045648, 0.021113, 0.080729, 0.133249, 0.192194, 0.246004, 0.297448]], 'min_x': 59.444, 'max_x': 240.556, 'min_y': 75.541944, 'max_y': 224.458048, 'x_count': 11, 'y_count': 11, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.00525', 'variable_pet_pa': '0.00650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.025}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'minimum_cruise_ratio': 0.5, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': True, 'save_config_pending_items': {'bed_mesh default': {'version': '1', 'points': '\n  0.134826, 0.167426, 0.197592, 0.229491, 0.263611, 0.291793, 0.312129, 0.323520, 0.349176, 0.370619, 0.390428\n  0.072342, 0.102644, 0.145424, 0.184191, 0.222432, 0.257422, 0.292327, 0.305529, 0.322321, 0.353252, 0.381488\n  0.023439, 0.057656, 0.099927, 0.146351, 0.184014, 0.223740, 0.268748, 0.289312, 0.312791, 0.347251, 0.376664\n  -0.012101, 0.034933, 0.078422, 0.126239, 0.182880, 0.222578, 0.257323, 0.287946, 0.326371, 0.356686, 0.393132\n  -0.048092, 0.002584, 0.045235, 0.104257, 0.163900, 0.206162, 0.244556, 0.284110, 0.318598, 0.347266, 0.394223\n  -0.085473, -0.029434, 0.025670, 0.085750, 0.139667, 0.189176, 0.235058, 0.279851, 0.316698, 0.357132, 0.404552\n  -0.123218, -0.065115, -0.004715, 0.057907, 0.119853, 0.178311, 0.230472, 0.274595, 0.317297, 0.360880, 0.408317\n  -0.131971, -0.062202, 0.005243, 0.073561, 0.140165, 0.197409, 0.255040, 0.307502, 0.350275, 0.398468, 0.453097\n  -0.138485, -0.067816, 0.005134, 0.073796, 0.150426, 0.214373, 0.272260, 0.321512, 0.379279, 0.428023, 0.482912\n  -0.163751, -0.099271, -0.027508, 0.054298, 0.130924, 0.201275, 0.261830, 0.313679, 0.377524, 0.435798, 0.496174\n  -0.192086, -0.117418, -0.040811, 0.040485, 0.121400, 0.193668, 0.260812, 0.321726, 0.387330, 0.447903, 0.507199', 'x_count': '11', 'y_count': '11', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '56.550004', 'max_x': '243.450016', 'min_y': '74.25', 'max_y': '225.75'}}}}
2024-04-28 06:49:18,561 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 06:49:18,564 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-28 06:49:18,564 [printer.py:reinit()] - # Extruders: 1
2024-04-28 06:49:18,564 [printer.py:reinit()] - # Temperature devices: 5
2024-04-28 06:49:18,564 [printer.py:reinit()] - # Fans: 6
2024-04-28 06:49:18,564 [printer.py:reinit()] - # Output pins: 1
2024-04-28 06:49:18,564 [printer.py:reinit()] - # Leds: 2
2024-04-28 06:49:18,585 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-28 06:49:18,588 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-28 06:49:18,887 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-28 06:49:18,892 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-28 06:49:18,892 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-28 06:49:18,895 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-28 06:49:18,895 [screen.py:init_klipper()] - Printer initialized
2024-04-28 06:49:18,896 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2024-04-28 06:49:18,896 [printer.py:change_state()] - Adding callback for state: ready
2024-04-28 06:49:18,899 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 06:49:18,899 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 06:49:18,969 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-28 06:49:18,988 [main_menu.py:add_device()] - Adding device: extruder
2024-04-28 06:49:18,993 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-28 06:49:18,999 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-28 06:49:19,004 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-28 06:49:19,008 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-28 06:49:19,013 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-28 06:49:19,073 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-28 06:49:19,083 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-28 06:49:19,098 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-28 06:49:19,108 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-28 06:49:19,110 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-28 06:49:19,135 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home
2024-04-28 06:49:19,136 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Test Prints
2024-04-28 06:49:19,137 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/3DP
2024-04-28 06:49:19,138 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration
2024-04-28 06:49:19,330 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Bambu Lamp
2024-04-28 06:49:19,332 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Robak 2
2024-04-28 06:49:19,333 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Swift Hub
2024-04-28 06:49:19,334 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Tools
2024-04-28 06:49:19,335 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Halloween
2024-04-28 06:49:19,336 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/IKEA
2024-04-28 06:49:19,337 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Mia
2024-04-28 06:49:19,339 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/3DP/TD-1
2024-04-28 06:49:19,341 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration/Voron Cube
2024-04-28 06:49:19,342 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration/Extrusion Multiplier
2024-04-28 06:49:19,343 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration/First Layer
2024-04-28 06:49:19,396 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Robak 2/Calibration
2024-04-28 06:49:56,166 [base_panel.py:process_update()] - Update complete
2024-04-28 06:59:48,747 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2024-04-28 06:59:48,747 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-28 06:59:48,748 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-28 06:59:48,748 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 06:59:48,750 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 06:59:48,751 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 06:59:48,783 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 06:59:52,361 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-28 06:59:52,369 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-28 06:59:52,370 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-28 06:59:52,370 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'timelapse', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-28 06:59:52,379 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-28 06:59:52,433 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-28 06:59:52,434 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-28 06:59:52,435 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 06:59:52,435 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-28 06:59:52,435 [printer.py:reinit()] - # Extruders: 0
2024-04-28 06:59:52,435 [printer.py:reinit()] - # Temperature devices: 0
2024-04-28 06:59:52,435 [printer.py:reinit()] - # Fans: 0
2024-04-28 06:59:52,435 [printer.py:reinit()] - # Output pins: 0
2024-04-28 06:59:52,435 [printer.py:reinit()] - # Leds: 0
2024-04-28 06:59:52,445 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-28 06:59:52,446 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-28 06:59:52,688 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2024-04-28 06:59:52,689 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-28 06:59:52,689 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-28 06:59:52,690 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-28 06:59:52,691 [screen.py:init_klipper()] - Printer initialized
2024-04-28 06:59:52,691 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2024-04-28 06:59:52,691 [printer.py:change_state()] - Adding callback for state: error
2024-04-28 06:59:52,693 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 06:59:52,693 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 06:59:52,730 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:00:51,071 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2024-04-28 07:00:51,071 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-28 07:00:51,072 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-28 07:00:51,072 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:00:51,074 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:00:51,075 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:00:51,111 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:00:54,357 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-28 07:00:54,366 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-28 07:00:54,367 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-28 07:00:54,367 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'timelapse', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-328-g5a60d64', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-28 07:00:54,376 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-28 07:00:54,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-28 07:00:54,549 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-28 07:00:54,549 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:00:54,549 [printer.py:reinit()] - Klipper version: v0.12.0-171-g2f6e94c9-dirty
2024-04-28 07:00:54,549 [printer.py:reinit()] - # Extruders: 0
2024-04-28 07:00:54,549 [printer.py:reinit()] - # Temperature devices: 0
2024-04-28 07:00:54,549 [printer.py:reinit()] - # Fans: 0
2024-04-28 07:00:54,549 [printer.py:reinit()] - # Output pins: 0
2024-04-28 07:00:54,550 [printer.py:reinit()] - # Leds: 0
2024-04-28 07:00:54,560 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-28 07:00:54,561 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-28 07:00:54,803 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2024-04-28 07:00:54,804 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-28 07:00:54,804 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-28 07:00:54,804 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-28 07:00:54,805 [screen.py:init_klipper()] - Printer initialized
2024-04-28 07:00:54,805 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2024-04-28 07:00:54,805 [printer.py:change_state()] - Adding callback for state: error
2024-04-28 07:00:54,807 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:00:54,807 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:00:54,843 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:01:56,537 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2024-04-28 07:01:56,537 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-28 07:01:57,086 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-28 07:01:57,086 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:01:57,089 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:01:57,089 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:01:57,126 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:01:59,889 [KlippyWebsocket.py:on_close()] - Server Shutdown
2024-04-28 07:01:59,890 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2024-04-28 07:02:00,053 [base_panel.py:process_update()] - Update complete
2024-04-28 07:02:00,054 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2024-04-28 07:02:00,055 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:02:00,056 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:02:00,105 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:02:00,164 [screen.py:connect_printer()] - Connecting to printer: Printer
2024-04-28 07:02:00,165 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:02:00,166 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:02:00,216 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:02:00,225 [KlippyWebsocket.py:connect()] - Attempting to connect
2024-04-28 07:02:00,232 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2024-04-28 07:02:00,829 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2024-04-28 07:02:00,829 [screen.py:init_printer()] - Moonraker not connected
2024-04-28 07:02:10,353 [KlippyWebsocket.py:connect()] - Attempting to connect
2024-04-28 07:02:10,372 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-28 07:02:10,392 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2024-04-28 07:02:10,394 [KlippyWebsocket.py:connect()] - Starting websocket thread
2024-04-28 07:02:10,409 [_logging.py:info()] - Websocket connected
2024-04-28 07:02:10,410 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2024-04-28 07:02:10,428 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-28 07:02:10,438 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-28 07:02:10,439 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-28 07:02:10,440 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'timelapse', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-337-g546a17f', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-28 07:02:10,452 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-28 07:02:10,628 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-28 07:02:10,630 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-28 07:02:10,630 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:02:10,631 [printer.py:reinit()] - Klipper version: v0.12.0-175-g7b490f3e-dirty
2024-04-28 07:02:10,631 [printer.py:reinit()] - # Extruders: 0
2024-04-28 07:02:10,631 [printer.py:reinit()] - # Temperature devices: 0
2024-04-28 07:02:10,631 [printer.py:reinit()] - # Fans: 0
2024-04-28 07:02:10,631 [printer.py:reinit()] - # Output pins: 0
2024-04-28 07:02:10,632 [printer.py:reinit()] - # Leds: 0
2024-04-28 07:02:10,650 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-28 07:02:10,651 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-28 07:02:10,895 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2024-04-28 07:02:10,898 [files.py:set_gcodes_path()] - Gcodes path: None
2024-04-28 07:02:10,898 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-28 07:02:10,901 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-28 07:02:10,903 [screen.py:init_klipper()] - Printer initialized
2024-04-28 07:02:10,904 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2024-04-28 07:02:10,904 [printer.py:change_state()] - Adding callback for state: error
2024-04-28 07:02:10,909 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:02:10,909 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:02:10,969 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:02:11,101 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home
2024-04-28 07:02:11,102 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Test Prints
2024-04-28 07:02:11,104 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/3DP
2024-04-28 07:02:11,104 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration
2024-04-28 07:02:11,270 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Bambu Lamp
2024-04-28 07:02:11,271 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Robak 2
2024-04-28 07:02:11,275 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Swift Hub
2024-04-28 07:02:11,275 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Tools
2024-04-28 07:02:11,277 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Halloween
2024-04-28 07:02:11,278 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/IKEA
2024-04-28 07:02:11,279 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Mia
2024-04-28 07:02:11,282 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/3DP/TD-1
2024-04-28 07:02:11,284 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration/Voron Cube
2024-04-28 07:02:11,285 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration/Extrusion Multiplier
2024-04-28 07:02:11,286 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Calibration/First Layer
2024-04-28 07:02:11,316 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes/Home/Robak 2/Calibration
2024-04-28 07:03:50,405 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2024-04-28 07:03:50,406 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-28 07:03:50,407 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-28 07:03:50,407 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:03:50,410 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:03:50,411 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:03:50,470 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:03:53,358 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-28 07:03:53,367 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-28 07:03:53,367 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-28 07:03:53,367 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'timelapse', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-337-g546a17f', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-28 07:03:53,376 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-28 07:03:53,620 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-28 07:03:53,621 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-28 07:03:53,621 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:03:53,621 [printer.py:reinit()] - Klipper version: v0.12.0-175-g7b490f3e-dirty
2024-04-28 07:03:53,621 [printer.py:reinit()] - # Extruders: 0
2024-04-28 07:03:53,621 [printer.py:reinit()] - # Temperature devices: 0
2024-04-28 07:03:53,621 [printer.py:reinit()] - # Fans: 0
2024-04-28 07:03:53,621 [printer.py:reinit()] - # Output pins: 0
2024-04-28 07:03:53,622 [printer.py:reinit()] - # Leds: 0
2024-04-28 07:03:53,632 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-28 07:03:53,633 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-28 07:03:53,872 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2024-04-28 07:03:53,876 [files.py:set_gcodes_path()] - Gcodes path: None
2024-04-28 07:03:53,877 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-28 07:03:53,879 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-28 07:03:53,879 [screen.py:init_klipper()] - Printer initialized
2024-04-28 07:03:53,879 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2024-04-28 07:03:53,880 [printer.py:change_state()] - Adding callback for state: error
2024-04-28 07:03:53,881 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:03:53,881 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:03:53,917 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:06:01,962 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2024-04-28 07:06:01,962 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-28 07:06:01,964 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-28 07:06:01,964 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:06:01,967 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:06:01,968 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:06:02,039 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:06:05,357 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-28 07:06:05,365 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-28 07:06:05,367 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-28 07:06:05,367 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'timelapse', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-337-g546a17f', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-28 07:06:05,376 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-28 07:06:05,398 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-28 07:06:05,401 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2', 'home_xy_position': '117.5, 117.5', 'home_z_hop': '5', 'home_z_hop_speed': '30', 'home_xy_move_speed': '300', 'home_method': 'contact', 'home_method_when_homed': 'contact', 'home_autocalibrate': 'always'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.00525', 'variable_pet_pa': '0.00650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.02500'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.062140, -0.036984, -0.007379, 0.031314, 0.058627, 0.084848, 0.107257, 0.111945, 0.135207, 0.152355, 0.170171\n-0.128044, -0.093273, -0.053917, -0.019434, 0.015362, 0.051030, 0.076081, 0.091292, 0.113629, 0.133648, 0.155842\n-0.171323, -0.136118, -0.096393, -0.057201, -0.010727, 0.024397, 0.048697, 0.072530, 0.099236, 0.126818, 0.150713\n-0.201543, -0.161727, -0.119034, -0.066854, -0.018463, 0.014217, 0.047420, 0.076211, 0.103883, 0.134441, 0.171920\n-0.229879, -0.188570, -0.139992, -0.085341, -0.040984, 0.002604, 0.042138, 0.073877, 0.104620, 0.133705, 0.171879\n-0.263766, -0.213518, -0.162008, -0.108459, -0.058518, -0.007646, 0.032310, 0.069869, 0.102956, 0.138912, 0.180918\n-0.296565, -0.242362, -0.188285, -0.127789, -0.071974, -0.019641, 0.027806, 0.070759, 0.105252, 0.142100, 0.184275\n-0.296242, -0.233747, -0.171416, -0.107834, -0.048348, 0.004540, 0.056827, 0.100566, 0.141602, 0.182628, 0.230079\n-0.281192, -0.228380, -0.164876, -0.101596, -0.030960, 0.023575, 0.079761, 0.121563, 0.171967, 0.216584, 0.265930\n-0.307454, -0.252371, -0.190633, -0.113183, -0.041936, 0.019598, 0.074971, 0.120663, 0.178367, 0.230549, 0.282552\n-0.324293, -0.258430, -0.193413, -0.119856, -0.045648, 0.021113, 0.080729, 0.133249, 0.192194, 0.246004, 0.297448', 'x_count': '11', 'y_count': '11', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '59.444', 'max_x': '240.556', 'min_y': '75.541944', 'max_y': '224.458048'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'autocal_speed': 3, 'autocal_accel': 100, 'autocal_retract_dist': 2, 'autocal_retract_speed': 100, 'autocal_sample_count': 3, 'autocal_tolerance': 0.008, 'autocal_max_retries': 3, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'home_xy_position': [117.5, 117.5], 'home_z_hop': 5.0, 'home_z_hop_speed': 30.0, 'home_xy_move_speed': 300.0, 'home_method': 'contact', 'home_method_when_homed': 'contact', 'home_autocalibrate': 'always', 'home_gcode_pre_xy': '', 'home_gcode_post_xy': '', 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.06214, -0.036984, -0.007379, 0.031314, 0.058627, 0.084848, 0.107257, 0.111945, 0.135207, 0.152355, 0.170171], [-0.128044, -0.093273, -0.053917, -0.019434, 0.015362, 0.05103, 0.076081, 0.091292, 0.113629, 0.133648, 0.155842], [-0.171323, -0.136118, -0.096393, -0.057201, -0.010727, 0.024397, 0.048697, 0.07253, 0.099236, 0.126818, 0.150713], [-0.201543, -0.161727, -0.119034, -0.066854, -0.018463, 0.014217, 0.04742, 0.076211, 0.103883, 0.134441, 0.17192], [-0.229879, -0.18857, -0.139992, -0.085341, -0.040984, 0.002604, 0.042138, 0.073877, 0.10462, 0.133705, 0.171879], [-0.263766, -0.213518, -0.162008, -0.108459, -0.058518, -0.007646, 0.03231, 0.069869, 0.102956, 0.138912, 0.180918], [-0.296565, -0.242362, -0.188285, -0.127789, -0.071974, -0.019641, 0.027806, 0.070759, 0.105252, 0.1421, 0.184275], [-0.296242, -0.233747, -0.171416, -0.107834, -0.048348, 0.00454, 0.056827, 0.100566, 0.141602, 0.182628, 0.230079], [-0.281192, -0.22838, -0.164876, -0.101596, -0.03096, 0.023575, 0.079761, 0.121563, 0.171967, 0.216584, 0.26593], [-0.307454, -0.252371, -0.190633, -0.113183, -0.041936, 0.019598, 0.074971, 0.120663, 0.178367, 0.230549, 0.282552], [-0.324293, -0.25843, -0.193413, -0.119856, -0.045648, 0.021113, 0.080729, 0.133249, 0.192194, 0.246004, 0.297448]], 'min_x': 59.444, 'max_x': 240.556, 'min_y': 75.541944, 'max_y': 224.458048, 'x_count': 11, 'y_count': 11, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.00525', 'variable_pet_pa': '0.00650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.025}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'minimum_cruise_ratio': 0.5, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-28 07:06:05,405 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:06:05,406 [printer.py:reinit()] - Klipper version: v0.12.0-175-g7b490f3e-dirty
2024-04-28 07:06:05,406 [printer.py:reinit()] - # Extruders: 1
2024-04-28 07:06:05,407 [printer.py:reinit()] - # Temperature devices: 5
2024-04-28 07:06:05,407 [printer.py:reinit()] - # Fans: 6
2024-04-28 07:06:05,407 [printer.py:reinit()] - # Output pins: 1
2024-04-28 07:06:05,407 [printer.py:reinit()] - # Leds: 2
2024-04-28 07:06:05,420 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-28 07:06:05,422 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-28 07:06:05,706 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-28 07:06:05,711 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-28 07:06:05,711 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-28 07:06:05,715 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-28 07:06:05,717 [screen.py:init_klipper()] - Printer initialized
2024-04-28 07:06:05,717 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-28 07:06:05,717 [printer.py:change_state()] - Adding callback for state: startup
2024-04-28 07:06:07,916 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-28 07:06:07,917 [printer.py:change_state()] - Adding callback for state: ready
2024-04-28 07:06:07,919 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:06:07,919 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:06:07,989 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-28 07:06:08,007 [main_menu.py:add_device()] - Adding device: extruder
2024-04-28 07:06:08,012 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-28 07:06:08,017 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-28 07:06:08,021 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-28 07:06:08,026 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-28 07:06:08,030 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-28 07:06:08,074 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-28 07:06:08,081 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-28 07:06:08,083 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2024-04-28 07:06:08,083 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: None
2024-04-28 07:06:13,368 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-28 07:06:13,403 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-28 07:06:13,430 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-28 07:06:13,432 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-28 07:06:14,544 [screen.py:show_popup_message()] - error: // Unknown command:"_SET_TIMELAPSE_SETUP"
2024-04-28 07:07:28,126 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2024-04-28 07:07:28,127 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-28 07:07:28,127 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-28 07:07:28,127 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:07:28,130 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:07:28,130 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:07:28,163 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:07:31,356 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-28 07:07:31,364 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-28 07:07:31,365 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-28 07:07:31,365 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'timelapse', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-337-g546a17f', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-28 07:07:31,375 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-28 07:07:31,427 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-28 07:07:31,427 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-28 07:07:31,428 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:07:31,428 [printer.py:reinit()] - Klipper version: v0.12.0-175-g7b490f3e-dirty
2024-04-28 07:07:31,428 [printer.py:reinit()] - # Extruders: 0
2024-04-28 07:07:31,428 [printer.py:reinit()] - # Temperature devices: 0
2024-04-28 07:07:31,429 [printer.py:reinit()] - # Fans: 0
2024-04-28 07:07:31,429 [printer.py:reinit()] - # Output pins: 0
2024-04-28 07:07:31,429 [printer.py:reinit()] - # Leds: 0
2024-04-28 07:07:31,439 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-28 07:07:31,440 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-28 07:07:31,682 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2024-04-28 07:07:31,684 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-28 07:07:31,684 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-28 07:07:31,685 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-28 07:07:31,685 [screen.py:init_klipper()] - Printer initialized
2024-04-28 07:07:31,685 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2024-04-28 07:07:31,686 [printer.py:change_state()] - Adding callback for state: error
2024-04-28 07:07:31,688 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:07:31,689 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:07:31,727 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:16:11,826 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2024-04-28 07:16:11,827 [printer.py:change_state()] - Adding callback for state: disconnected
2024-04-28 07:16:11,828 [screen.py:state_disconnected()] - ### Going to disconnected
2024-04-28 07:16:11,828 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:16:11,829 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:16:11,830 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:16:11,863 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-04-28 07:16:15,358 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2024-04-28 07:16:15,367 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2024-04-28 07:16:15,368 [printer.py:configure_cameras()] - Cameras: [{'name': 'DOUBLE T', 'enabled': True, 'icon': 'mdiPrinter3d', 'aspect_ratio': '4:3', 'target_fps': 15, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': True, 'flip_vertical': True, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': '89319f3e-0d6e-492a-bad3-ee41cdb4ca7c'}]
2024-04-28 07:16:15,368 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'timelapse', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-337-g546a17f', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-04-28 07:16:15,379 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2024-04-28 07:16:15,402 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2024-04-28 07:16:15,406 [screen.py:init_klipper()] - {'configfile': {'config': {'exclude_object': {}, 'idle_timeout': {'timeout': '3600'}, 'force_move': {'enable_force_move': 'True'}, 'respond': {'default_type': 'echo'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'BASE_CANCEL_PRINT', 'variable_park': 'True', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0', 'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00'}, 'temperature_sensor Spider': {'sensor_type': 'temperature_mcu', 'min_temp': '10', 'max_temp': '100'}, 'board_pins spider': {'aliases': '\n\nX_STEP=PE11, X_DIR=PE10, X_ENABLE=PE9,\nY_STEP=PD8, Y_DIR=PB12, Y_ENABLE=PD9,\nZ_STEP=PD14, Z_DIR=PD13, Z_ENABLE=PD15,\nE0_STEP=PD5, E0_DIR=PD6, E0_ENABLE=PD4,\nE1_STEP=PE6, E1_DIR=PC13, E1_ENABLE=PE5,\nE2_STEP=PE2, E2_DIR=PE4, E2_ENABLE=PE3,\nE3_STEP=PD12, E3_DIR=PC4, E3_ENABLE=PE8,\nE4_STEP=PE1, E4_DIR=PE0, E4_ENABLE=PC5,\n\nX_MIN=PB14, X_MAX=PA1,\nY_MIN=PB13, Y_MAX=PA2,\nZ_MIN=PA0, Z_MAX=PA3,\n\nX_UART=PE7, Y_UART=PE15, Z_UART=PD10,\nE0_UART=PD7, E1_UART=PC14, E2_UART=PC15,\nE3_UART=PA15, E4_UART=PD11,\n\nE_HEATER=PB15, E_THERMISTOR=PC0,\nE1_HEATER=PC8, E1_THERMISTOR=PC1,\nE2_HEATER=PB3, E2_THERMISTOR=PC2,\nBED_HEATER=PB4, BED_THERMISTOR=PC3,\nFAN0=PB0, FAN1=PB1, FAN2=PB2,\n\nLED-R=PB6, LED-G=PB5, LED-B=PB7,\n\nEXP1_1=PC9, EXP1_3=PC11, EXP1_5=PC10, EXP1_7=PD0, EXP1_9=<GND>,\nEXP1_2=PA8, EXP1_4=PD2, EXP1_6=PC12, EXP1_8=PD1, EXP1_10=<5V>,\n\nEXP2_1=PA6, EXP2_3=PC6, EXP2_5=PC7, EXP2_7=PB10, EXP2_9=<GND>,\nEXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'min_temp': '10', 'max_temp': '100'}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': '30.', 'verbose': 'True'}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': '30.', 'verbose': 'True'}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25'}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36'}, 'printer': {'kinematics': 'corexy', 'max_velocity': '800', 'max_accel': '20000', 'max_z_velocity': '15', 'max_z_accel': '350', 'square_corner_velocity': '5.0'}, 'extruder': {'sensor_pin': 'sht36:PA3', 'sensor_type': 'PT1000', 'heater_pin': 'sht36:PA8', 'min_temp': '10', 'max_temp': '270', 'max_power': '1.0', 'min_extrude_temp': '10', 'control': 'pid', 'pid_kp': '20.362', 'pid_ki': '2.225', 'pid_kd': '46.579', 'pressure_advance_smooth_time': '0.040', 'max_extrude_only_velocity': '120', 'max_extrude_only_accel': '800', 'max_extrude_only_distance': '1150', 'max_extrude_cross_section': '9999', 'nozzle_diameter': '0.400', 'filament_diameter': '1.75', 'step_pin': 'sht36:PB4', 'dir_pin': '!sht36:PB3', 'enable_pin': '!sht36:PA15', 'full_steps_per_rotation': '200', 'rotation_distance': '22.66103', 'gear_ratio': '50:10', 'microsteps': '16', 'pressure_advance': '0.05'}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'sensor_pin': 'PC2', 'min_temp': '-100', 'max_temp': '100', 'gcode_id': 'C'}, 'heater_bed': {'heater_pin': 'PB4', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'sensor_pin': 'PB0', 'max_power': '0.9', 'min_temp': '-160', 'max_temp': '120', 'control': 'pid', 'pid_kp': '41.450', 'pid_ki': '1.322', 'pid_kd': '324.866'}, 'multi_pin stepper_drivers_multipin': {'pins': 'PB5, PB6, PB7'}, 'controller_fan stepper_drivers': {'pin': 'multi_pin:stepper_drivers_multipin', 'hardware_pwm': 'False', 'max_power': '1.0', 'fan_speed': '0.75', 'shutdown_speed': '0.0', 'stepper': 'stepper_x, stepper_y'}, 'heater_fan controller_fan': {'pin': 'PB2', 'cycle_time': '0.00004', 'off_below': '0.1', 'kick_start_time': '0.5', 'heater': 'heater_bed', 'heater_temp': '50.0', 'max_power': '1.0'}, 'heater_fan hotend_fan': {'pin': 'sht36:PB10', 'max_power': '1.0', 'kick_start_time': '0.5', 'heater': 'extruder', 'heater_temp': '40.0'}, 'fan': {'pin': 'sht36:PB11', 'max_power': '0.85', 'cycle_time': '0.00005', 'kick_start_time': '0', 'off_below': '0.0', 'shutdown_speed': '0'}, 'fan_generic stepper_fans': {'pin': 'PA13', 'max_power': '0.5', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.0001'}, 'fan_generic rebreather': {'pin': 'PA14', 'max_power': '1.0', 'shutdown_speed': '0.0', 'kick_start_time': '0.5', 'hardware_pwm': 'False', 'cycle_time': '0.00010'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0'}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'a0_pin': 'PD2', 'rst_pin': 'PC10', 'encoder_pins': '^PC6,^PC7', 'click_pin': '^!PA8', 'contrast': '63', 'spi_software_mosi_pin': 'PA7', 'spi_software_miso_pin': 'PA6', 'spi_software_sclk_pin': 'PA5', 'display_group': '__voron_display_16x4'}, 'gcode_macro M300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': '60', 'initial_red': '0.1', 'initial_green': '0.5', 'initial_blue': '0.0', 'color_order': 'RGB'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_slot': '0', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.'}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....'}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....'}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_slot': '1', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....'}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_slot': '3', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....'}, 'display_glyph fan': {'hd44780_slot': '2', 'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....'}, 'display_glyph clock': {'hd44780_slot': '4', 'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....'}, 'display_glyph degrees': {'hd44780_slot': '5', 'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....'}, 'display_glyph usb': {'hd44780_slot': '6', 'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..'}, 'display_glyph sd': {'hd44780_slot': '6', 'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....'}, 'delayed_gcode setdisplayneopixel': {'initial_duration': '1', 'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1'}, 'stepper_x': {'step_pin': 'PE11', 'dir_pin': '!PE10', 'enable_pin': '!PE9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_min': '0', 'position_endstop': '300', 'position_max': '300', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'interpolate': 'True', 'diag0_pin': '^!PB14', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_y': {'step_pin': 'PD8', 'dir_pin': '!PB12', 'enable_pin': '!PD9', 'rotation_distance': '50', 'microsteps': '128', 'full_steps_per_rotation': '200', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_min': '0', 'position_endstop': '310', 'position_max': '310', 'homing_speed': '50', 'homing_retract_dist': '0', 'homing_positive_dir': 'true'}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_software_mosi_pin': 'PE14', 'spi_software_miso_pin': 'PE13', 'spi_software_sclk_pin': 'PE12', 'diag0_pin': '^!PB13', 'interpolate': 'True', 'run_current': '1', 'driver_sgt': '1'}, 'stepper_z': {'step_pin': 'PE6', 'dir_pin': 'PC13', 'enable_pin': '!PE5', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '240', 'position_min': '-5', 'homing_speed': '10', 'second_homing_speed': '3.0', 'homing_retract_dist': '0.0'}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': '0', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z1': {'step_pin': 'PE2', 'dir_pin': 'PE4', 'enable_pin': '!PE3', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'stepper_z2': {'step_pin': 'PD12', 'dir_pin': 'PC4', 'enable_pin': '!PE8', 'rotation_distance': '4', 'full_steps_per_rotation': '200', 'microsteps': '32'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'interpolate': 'True', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'interpolate': 'false', 'run_current': '0.6', 'sense_resistor': '0.110', 'stealthchop_threshold': '0'}, 'gcode_arcs': {'resolution': '1.0'}, 'output_pin LIGHTS': {'pin': 'PC8', 'pwm': 'true', 'shutdown_value': '0', 'value': '1', 'cycle_time': '0.01'}, 'gcode_macro LIGHTS_ON': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6'}, 'gcode_macro LIGHTS_ON_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20'}, 'gcode_macro LIGHTS_OFF': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': '3', 'color_order': 'GRBW', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0', 'initial_white': '0.0'}, 'gcode_macro _sb_vars': {'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"', 'gcode': ''}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}"}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on'}, 'delayed_gcode set_sb_leds_on_boot': {'initial_duration': '1', 'gcode': '\nflicker\nstatus_ready'}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}'}, 'beacon': {'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'x_offset': '0', 'y_offset': '-24', 'mesh_main_direction': 'x', 'mesh_runs': '2'}, 'bed_mesh': {'speed': '150', 'horizontal_move_z': '10', 'mesh_min': '10,10', 'mesh_max': '290,240', 'probe_count': '15,15', 'algorithm': 'bicubic', 'fade_start': '1', 'fade_end': '5', 'fade_target': '0'}, 'z_tilt': {'speed': '500', 'horizontal_move_z': '10', 'retries': '5', 'retry_tolerance': '0.004', 'z_positions': '\n-50, 18\n150, 348\n350, 18', 'points': '\n30, 5\n150, 245\n270, 5'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2'}, 'gcode_macro MACROS_VARS': {'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.00525', 'variable_pet_pa': '0.00650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20', 'gcode': ''}, 'gcode_macro MATERIAL_PA': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"'}, 'gcode_macro PURGE_LINE': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."'}, 'gcode_macro G32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600'}, 'gcode_macro PRINT_END': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"'}, 'gcode_macro SET_TEMP': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}'}, 'gcode_macro ENDING_RETRACTION': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800'}, 'gcode_macro PARK_AT_PRINT_END': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600'}, 'gcode_macro Homing_Variables': {'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True', 'gcode': ''}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro DISPLAY_PARAMETERS': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}'}, 'gcode_macro MOVE_AWAY_BEFORE_HOMING': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}'}, 'gcode_macro _HOME_X': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}'}, 'gcode_macro _HOME_Z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}'}, 'gcode_macro ABSOLUTE_COORDINATES': {'gcode': '\nG90'}, 'gcode_macro RELATIVE_COORDINATES': {'gcode': '\nG91'}, 'gcode_macro DISPLAYTEXT': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"'}, 'gcode_macro DISPLAY_PROGRESS': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"'}, 'gcode_macro TEMPERATURE_WAIT': {'rename_existing': '_TEMPERATURE_WAIT', 'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"'}, 'gcode_macro WAIT': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}'}, 'gcode_macro CHOME': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}'}, 'gcode_macro RESET_EXTRUDER': {'gcode': '\nG92 E0'}, 'gcode_macro PARK_TOOLHEAD': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000'}, 'gcode_macro DUMP_VARIABLES': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}'}, 'gcode_macro UNLOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state'}, 'gcode_macro LOAD_FILAMENT': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state'}, 'gcode_macro PID_HOTEND': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250'}, 'gcode_macro PID_BED': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80'}, 'gcode_macro Z_ENDSTOP': {'gcode': '\nZ_ENDSTOP_CALIBRATE'}, 'gcode_macro PROBE_CAL': {'gcode': '\n\nG28\nPROBE_CALIBRATE'}, 'gcode_macro IS_CAL': {'gcode': '\n\nG28\nSHAPER_CALIBRATE'}, 'gcode_macro SPEEDTEST': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state'}, 'gcode_macro SPEEDTEST2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state'}, 'gcode_macro PRESSURE_ADVANCE_CALIBRATION': {'description': 'Calibrate the pressure advance by printing a grid pattern', 'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION'}, 'gcode_macro TEST_SPEED': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED'}, 'gcode_macro SETUP_KAMP_MESHING': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\''}, 'input_shaper': {'shaper_freq_x': '86.8', 'shaper_type_x': 'zv', 'shaper_freq_y': '62.2', 'shaper_type_y': 'zv'}, 'probe': {'z_offset': '-0.0400'}, 'beacon model default': {'model_coef': '1.409155451498927,\n1.7229833219997472,\n0.7624260199879447,\n0.3933310021549746,\n0.3504714980336664,\n0.3215136667184013,\n-0.12014580629124338,\n-0.22419779942999016,\n0.19713656245482147,\n0.188750402116144', 'model_domain': '3.120873231931901e-07,3.332026812812074e-07', 'model_range': '0.200000,5.000000', 'model_temp': '23.909578', 'model_offset': '0.02500'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.062140, -0.036984, -0.007379, 0.031314, 0.058627, 0.084848, 0.107257, 0.111945, 0.135207, 0.152355, 0.170171\n-0.128044, -0.093273, -0.053917, -0.019434, 0.015362, 0.051030, 0.076081, 0.091292, 0.113629, 0.133648, 0.155842\n-0.171323, -0.136118, -0.096393, -0.057201, -0.010727, 0.024397, 0.048697, 0.072530, 0.099236, 0.126818, 0.150713\n-0.201543, -0.161727, -0.119034, -0.066854, -0.018463, 0.014217, 0.047420, 0.076211, 0.103883, 0.134441, 0.171920\n-0.229879, -0.188570, -0.139992, -0.085341, -0.040984, 0.002604, 0.042138, 0.073877, 0.104620, 0.133705, 0.171879\n-0.263766, -0.213518, -0.162008, -0.108459, -0.058518, -0.007646, 0.032310, 0.069869, 0.102956, 0.138912, 0.180918\n-0.296565, -0.242362, -0.188285, -0.127789, -0.071974, -0.019641, 0.027806, 0.070759, 0.105252, 0.142100, 0.184275\n-0.296242, -0.233747, -0.171416, -0.107834, -0.048348, 0.004540, 0.056827, 0.100566, 0.141602, 0.182628, 0.230079\n-0.281192, -0.228380, -0.164876, -0.101596, -0.030960, 0.023575, 0.079761, 0.121563, 0.171967, 0.216584, 0.265930\n-0.307454, -0.252371, -0.190633, -0.113183, -0.041936, 0.019598, 0.074971, 0.120663, 0.178367, 0.230549, 0.282552\n-0.324293, -0.258430, -0.193413, -0.119856, -0.045648, 0.021113, 0.080729, 0.133249, 0.192194, 0.246004, 0.297448', 'x_count': '11', 'y_count': '11', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '59.444', 'max_x': '240.556', 'min_y': '75.541944', 'max_y': '224.458048'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f446xx_2D0053000E51323130373733-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'mcu sht36': {'canbus_uuid': '943ff2eb48fd', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'idle_timeout': {'timeout': 3600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'force_move': {'enable_force_move': True}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': '\nCANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nPRINT_END\nBASE_CANCEL_PRINT', 'rename_existing': 'BASE_CANCEL_PRINT', 'description': 'Cancel the actual running print', 'variable_park': 'True'}, 'gcode_macro pause': {'gcode': '\nPAUSE_BASE\n_TOOLHEAD_PARK_PAUSE_CANCEL', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set extrude = printer[\'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL\'].extrude %}\n\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set z_park_delta = 2.0 %}\n\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - z_park_delta) %}\n{% set z_safe = z_park_delta %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\n\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nM83\nG1 E-{extrude} F2100\n{% if printer.gcode_move.absolute_extrude |lower == \'true\' %} M82 {% endif %}\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% if printer.gcode_move.absolute_coordinates|lower == \'false\' %} G91 {% endif %}\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'variable_extrude': '1.0'}, 'temperature_sensor spider': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'mcu', 'min_temp': 10.0, 'max_temp': 100.0}, 'board_pins spider': {'mcu': ['mcu'], 'aliases': [['X_STEP', 'PE11'], ['X_DIR', 'PE10'], ['X_ENABLE', 'PE9'], ['Y_STEP', 'PD8'], ['Y_DIR', 'PB12'], ['Y_ENABLE', 'PD9'], ['Z_STEP', 'PD14'], ['Z_DIR', 'PD13'], ['Z_ENABLE', 'PD15'], ['E0_STEP', 'PD5'], ['E0_DIR', 'PD6'], ['E0_ENABLE', 'PD4'], ['E1_STEP', 'PE6'], ['E1_DIR', 'PC13'], ['E1_ENABLE', 'PE5'], ['E2_STEP', 'PE2'], ['E2_DIR', 'PE4'], ['E2_ENABLE', 'PE3'], ['E3_STEP', 'PD12'], ['E3_DIR', 'PC4'], ['E3_ENABLE', 'PE8'], ['E4_STEP', 'PE1'], ['E4_DIR', 'PE0'], ['E4_ENABLE', 'PC5'], ['X_MIN', 'PB14'], ['X_MAX', 'PA1'], ['Y_MIN', 'PB13'], ['Y_MAX', 'PA2'], ['Z_MIN', 'PA0'], ['Z_MAX', 'PA3'], ['X_UART', 'PE7'], ['Y_UART', 'PE15'], ['Z_UART', 'PD10'], ['E0_UART', 'PD7'], ['E1_UART', 'PC14'], ['E2_UART', 'PC15'], ['E3_UART', 'PA15'], ['E4_UART', 'PD11'], ['E_HEATER', 'PB15'], ['E_THERMISTOR', 'PC0'], ['E1_HEATER', 'PC8'], ['E1_THERMISTOR', 'PC1'], ['E2_HEATER', 'PB3'], ['E2_THERMISTOR', 'PC2'], ['BED_HEATER', 'PB4'], ['BED_THERMISTOR', 'PC3'], ['FAN0', 'PB0'], ['FAN1', 'PB1'], ['FAN2', 'PB2'], ['LED-R', 'PB6'], ['LED-G', 'PB5'], ['LED-B', 'PB7'], ['EXP1_1', 'PC9'], ['EXP1_3', 'PC11'], ['EXP1_5', 'PC10'], ['EXP1_7', 'PD0'], ['EXP1_9', '<GND>'], ['EXP1_2', 'PA8'], ['EXP1_4', 'PD2'], ['EXP1_6', 'PC12'], ['EXP1_8', 'PD1'], ['EXP1_10', '<5V>'], ['EXP2_1', 'PA6'], ['EXP2_3', 'PC6'], ['EXP2_5', 'PC7'], ['EXP2_7', 'PB10'], ['EXP2_9', '<GND>'], ['EXP2_2', 'PA5'], ['EXP2_4', 'PA4'], ['EXP2_6', 'PA7'], ['EXP2_8', '<RST>'], ['EXP2_10', '<5V>']]}, 'temperature_sensor raspberry_pi': {'sensor_type': 'temperature_host', 'sensor_path': '/sys/class/thermal/thermal_zone0/temp', 'min_temp': 10.0, 'max_temp': 100.0}, 'gcode_shell_command rpi_fan_50': {'command': 'i2cset -y 1 0x01a 0x32', 'timeout': 30.0, 'verbose': True}, 'gcode_shell_command rpi_fan_25': {'command': 'i2cset -y 1 0x01a 0x19', 'timeout': 30.0, 'verbose': True}, 'gcode_macro rpi_fan_50': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_50', 'description': 'G-Code macro'}, 'gcode_macro rpi_fan_25': {'gcode': '\nRUN_SHELL_COMMAND CMD=rpi_fan_25', 'description': 'G-Code macro'}, 'temperature_sensor sht36': {'sensor_type': 'temperature_mcu', 'sensor_mcu': 'sht36', 'min_temp': -273.15, 'max_temp': 99999999.9}, 'temperature_sensor chamber': {'sensor_type': 'NTC 100K MGB18-104F39050L32', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC2', 'min_temp': -100.0, 'max_temp': 100.0, 'gcode_id': 'C'}, 'heater_bed': {'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PB0', 'min_temp': -160.0, 'max_temp': 120.0, 'min_extrude_temp': 170.0, 'max_power': 0.9, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 41.45, 'pid_ki': 1.322, 'pid_kd': 324.866, 'heater_pin': 'PB4', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'multi_pin stepper_drivers_multipin': {'pins': ['PB5', 'PB6', 'PB7']}, 'controller_fan stepper_drivers': {'stepper': ['stepper_x', 'stepper_y'], 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'multi_pin:stepper_drivers_multipin', 'fan_speed': 0.75, 'idle_speed': 0.75, 'idle_timeout': 30, 'heater': ['extruder']}, 'heater_fan controller_fan': {'heater': ['heater_bed'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.1, 'cycle_time': 4e-05, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PB2', 'fan_speed': 1.0}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 40.0, 'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'sht36:PB10', 'fan_speed': 1.0}, 'fan': {'max_power': 0.85, 'kick_start_time': 0.0, 'off_below': 0.0, 'cycle_time': 5e-05, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'sht36:PB11'}, 'fan_generic stepper_fans': {'max_power': 0.5, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA13'}, 'fan_generic rebreather': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.0001, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PA14'}, 'gcode_macro rebreather_start_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.5', 'description': 'G-Code macro'}, 'gcode_macro rebreather_end_print': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.7\nUPDATE_DELAYED_GCODE ID=rebreather_stop_delayed DURATION=900', 'description': 'G-Code macro'}, 'delayed_gcode rebreather_stop_delayed': {'gcode': '\nSET_FAN_SPEED FAN=rebreather SPEED=0.0', 'initial_duration': 0.0}, 'display': {'lcd_type': 'uc1701', 'cs_pin': 'PC11', 'spi_speed': 10000000, 'spi_software_sclk_pin': 'PA5', 'spi_software_miso_pin': 'PA6', 'spi_software_mosi_pin': 'PA7', 'a0_pin': 'PD2', 'contrast': 63, 'rst_pin': 'PC10', 'menu_root': '__main', 'menu_timeout': 0, 'menu_reverse_navigation': False, 'encoder_pins': '^PC6,^PC7', 'encoder_steps_per_detent': 4, 'encoder_fast_rate': 0.03, 'click_pin': '^!PA8', 'display_group': '__voron_display_16x4'}, 'display_template _heater_temperature': {'param_heater_name': '"extruder"', 'text': '\n{% if param_heater_name in printer %}\n{% set heater = printer[param_heater_name] %}\n\n{% if param_heater_name == "heater_bed" %}\n{% if heater.target %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~bed_heat{frame}~\n{% else %}\n~bed~\n{% endif %}\n{% else %}\n~extruder~\n{% endif %}\n\n{ "%3.0f" % (heater.temperature,) }\n\n{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}\n~right_arrow~\n{ "%0.0f" % (heater.target,) }\n{% endif %}\n~degrees~\n{% endif %}'}, 'display_template _fan_speed': {'text': '\n{% if \'fan\' in printer %}\n{% set speed = printer.fan.speed %}\n{% if speed %}\n{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}\n~fan{frame}~\n{% else %}\n~fan1~\n{% endif %}\n{ "{:>4.0%}".format(speed) }\n{% endif %}'}, 'display_template _printing_time': {'text': '\n{% set ptime = printer.idle_timeout.printing_time %}\n{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }'}, 'display_template _print_status': {'text': '\n{% if printer.display_status.message %}\n{ printer.display_status.message }\n{% elif printer.idle_timeout.printing_time %}\n{% set pos = printer.toolhead.position %}\n{ "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }\n{% else %}\nReady\n{% endif %}'}, 'display_data __voron_display_16x4 extruder': {'position': '0, 0', 'text': '\n{% set active_extruder = printer.toolhead.extruder %}\n{ render("_heater_temperature", param_heater_name=active_extruder) }'}, 'display_data __voron_display_16x4 fan': {'position': '0, 10', 'text': '{ render("_fan_speed") }'}, 'display_data __voron_display_16x4 heater_bed': {'position': '1, 0', 'text': '{ render("_heater_temperature", param_heater_name="heater_bed") }'}, 'display_data __voron_display_16x4 chamber': {'position': '1,10', 'text': '\n{% set chamber = printer[\'temperature_sensor chamber\'] %}\n~chamber~\n{ "%3.0f" % (chamber.temperature,) }\n~degrees~'}, 'display_data __voron_display_16x4 print_progress': {'position': '2, 0', 'text': '{ "{:^10.0%}".format(printer.display_status.progress) }'}, 'display_data __voron_display_16x4 progress_bar': {'position': '2, 1', 'text': '{ draw_progress_bar(2, 0, 10, printer.display_status.progress) }'}, 'display_data __voron_display_16x4 printing_time': {'position': '2, 10', 'text': '{ "%6s" % (render("_printing_time").strip(),) }'}, 'display_data __voron_display_16x4 print_status': {'position': '3, 0', 'text': '{ render("_print_status") }'}, 'display_glyph extruder': {'data': '\n................\n................\n..************..\n.....******.....\n..************..\n.....******.....\n..************..\n................\n....********....\n....******.*....\n....********....\n................\n......****......\n.......**.......\n................\n................', 'hd44780_data': '\n..*..\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n*...*\n*...*\n.***.', 'hd44780_slot': 0}, 'display_glyph bed': {'data': '\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.....\n*****\n*.*.*\n*...*\n*.*.*\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat1': {'data': '\n................\n................\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n.*..*\n*..*.\n.*..*\n*..*.\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph bed_heat2': {'data': '\n................\n................\n..*....*....*...\n...*....*....*..\n..*....*....*...\n.*....*....*....\n..*....*....*...\n...*....*....*..\n..*....*....*...\n................\n................\n...*********....\n..*.........*...\n.*************..\n................\n................', 'hd44780_data': '\n*..*.\n.*..*\n*..*.\n.*..*\n.....\n*****\n.....\n.....', 'hd44780_slot': 1}, 'display_glyph fan1': {'data': '\n................\n................\n....***.........\n...****....**...\n...****...****..\n....***..*****..\n.....*....****..\n.......**.......\n.......**.......\n..****....*.....\n..*****..***....\n..****...****...\n...**....****...\n.........***....\n................\n................'}, 'display_glyph fan2': {'data': '\n................\n................\n.......****.....\n.......****.....\n.......***......\n..**...**.......\n..***...........\n..****.**.****..\n..****.**.****..\n...........***..\n.......**...**..\n......***.......\n.....****.......\n.....****.......\n................\n................'}, 'display_glyph chamber': {'data': '\n................\n****************\n*....*....*....*\n*....*....*....*\n*....******....*\n*..............*\n*..............*\n*.....****.....*\n*.***.*..*.***.*\n*.....****.....*\n*......**......*\n*..............*\n*.************.*\n*...*......*...*\n****************\n................'}, 'display_glyph feedrate': {'data': '\n................\n................\n***.***.***.**..\n*...*...*...*.*.\n**..**..**..*.*.\n*...*...*...*.*.\n*...***.***.**..\n................\n**...*..***.***.\n*.*.*.*..*..*...\n**..***..*..**..\n*.*.*.*..*..*...\n*.*.*.*..*..***.\n................\n................\n................', 'hd44780_data': '\n***..\n*....\n**...\n*.***\n..*.*\n..**.\n..*.*\n.....', 'hd44780_slot': 3}, 'display_glyph fan': {'hd44780_data': '\n.....\n*..**\n**.*.\n..*..\n.*.**\n**..*\n.....\n.....', 'hd44780_slot': 2}, 'display_glyph clock': {'hd44780_data': '\n.....\n.***.\n*..**\n*.*.*\n*...*\n.***.\n.....\n.....', 'hd44780_slot': 4}, 'display_glyph degrees': {'hd44780_data': '\n.**..\n*..*.\n*..*.\n.**..\n.....\n.....\n.....\n.....', 'hd44780_slot': 5}, 'display_glyph usb': {'hd44780_data': '\n.***.\n.***.\n.***.\n*****\n*****\n*****\n..*..\n..*..', 'hd44780_slot': 6}, 'display_glyph sd': {'hd44780_data': '\n.....\n..***\n.****\n*****\n*****\n*****\n*****\n.....', 'hd44780_slot': 6}, 'gcode_macro m300': {'gcode': 'SET_PIN PIN=BEEPER_pin VALUE={S}\nG4 P{P}\nSET_PIN PIN=BEEPER_pin VALUE=0', 'description': 'G-Code macro'}, 'neopixel mini12864': {'pin': 'PC12', 'chain_count': 60, 'color_order': ['RGB'], 'initial_red': 0.1, 'initial_green': 0.5, 'initial_blue': 0.0, 'initial_white': 0.0}, 'delayed_gcode setdisplayneopixel': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'initial_duration': 1.0}, 'gcode_macro red': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro orange': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro green': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro blue': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro white': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro yellow': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=1.0 BLUE=0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'gcode_macro purple': {'gcode': '\nSET_LED LED=mini12864 RED=0.6 GREEN=0.6 BLUE=1.0 INDEX=3 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=2 TRANSMIT=1\nSET_LED LED=mini12864 RED=1.0 GREEN=0 BLUE=1.0 INDEX=1 TRANSMIT=1', 'description': 'G-Code macro'}, 'tmc5160 stepper_x': {'cs_pin': 'PE7', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB14', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_x': {'microsteps': 128, 'step_pin': 'PE11', 'dir_pin': '!PE10', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE9', 'endstop_pin': 'tmc5160_stepper_x:virtual_endstop', 'position_endstop': 300.0, 'position_min': 0.0, 'position_max': 300.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc5160 stepper_y': {'cs_pin': 'PE15', 'spi_speed': 4000000, 'spi_software_sclk_pin': 'PE12', 'spi_software_miso_pin': 'PE13', 'spi_software_mosi_pin': 'PE14', 'diag0_pin': '^!PB13', 'run_current': 1.0, 'hold_current': 10.0, 'sense_resistor': 0.075, 'interpolate': True, 'driver_mslut0': 2863314260, 'driver_mslut1': 1251300522, 'driver_mslut2': 608774441, 'driver_mslut3': 269500962, 'driver_mslut4': 4227858431, 'driver_mslut5': 3048961917, 'driver_mslut6': 1227445590, 'driver_mslut7': 4211234, 'driver_w0': 2, 'driver_w1': 1, 'driver_w2': 1, 'driver_w3': 1, 'driver_x1': 128, 'driver_x2': 255, 'driver_x3': 255, 'driver_start_sin': 0, 'driver_start_sin90': 247, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 2, 'driver_fd3': 0, 'driver_disfdcc': 0, 'driver_chm': 0, 'driver_tbl': 2, 'driver_vhighfs': 0, 'driver_vhighchm': 0, 'driver_tpfd': 4, 'driver_diss2g': 0, 'driver_diss2vs': 0, 'driver_semin': 0, 'driver_seup': 0, 'driver_semax': 0, 'driver_sedn': 0, 'driver_seimin': 0, 'driver_sgt': 1, 'driver_sfilt': 0, 'driver_drvstrength': 0, 'driver_bbmclks': 4, 'driver_bbmtime': 0, 'driver_filt_isense': 0, 'driver_iholddelay': 6, 'driver_pwm_ofs': 30, 'driver_pwm_grad': 0, 'driver_pwm_freq': 0, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_freewheel': 0, 'driver_pwm_reg': 4, 'driver_pwm_lim': 12, 'driver_tpowerdown': 10}, 'stepper_y': {'microsteps': 128, 'step_pin': 'PD8', 'dir_pin': '!PB12', 'rotation_distance': 50.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PD9', 'endstop_pin': 'tmc5160_stepper_y:virtual_endstop', 'position_endstop': 310.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': True}, 'tmc2209 stepper_z': {'uart_pin': 'PC14', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z': {'microsteps': 32, 'step_pin': 'PE6', 'dir_pin': 'PC13', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE5', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -5.0, 'position_max': 240.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 10.0, 'homing_retract_dist': 0.0, 'homing_positive_dir': False}, 'tmc2209 stepper_z1': {'uart_pin': 'PC15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z1': {'microsteps': 32, 'step_pin': 'PE2', 'dir_pin': 'PE4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE3'}, 'tmc2209 stepper_z2': {'uart_pin': 'PA15', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': True, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'stepper_z2': {'microsteps': 32, 'step_pin': 'PD12', 'dir_pin': 'PC4', 'rotation_distance': 4.0, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PE8'}, 'tmc2209 extruder': {'uart_pin': 'sht36:PB5', 'uart_address': 0, 'run_current': 0.6, 'hold_current': 2.0, 'sense_resistor': 0.11, 'interpolate': False, 'stealthchop_threshold': 0.0, 'driver_multistep_filt': True, 'driver_toff': 3, 'driver_hstrt': 5, 'driver_hend': 0, 'driver_tbl': 2, 'driver_iholddelay': 8, 'driver_pwm_ofs': 36, 'driver_pwm_grad': 14, 'driver_pwm_freq': 1, 'driver_pwm_autoscale': True, 'driver_pwm_autograd': True, 'driver_pwm_reg': 8, 'driver_pwm_lim': 12, 'driver_tpowerdown': 20, 'driver_sgthrs': 0}, 'extruder': {'microsteps': 16, 'sensor_type': 'PT1000', 'pullup_resistor': 4700.0, 'sensor_pin': 'sht36:PA3', 'min_temp': 10.0, 'max_temp': 270.0, 'min_extrude_temp': 10.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 20.362, 'pid_ki': 2.225, 'pid_kd': 46.579, 'heater_pin': 'sht36:PA8', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 9999.0, 'max_extrude_only_velocity': 120.0, 'max_extrude_only_accel': 800.0, 'max_extrude_only_distance': 1150.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'sht36:PB4', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.04, 'dir_pin': '!sht36:PB3', 'rotation_distance': 22.66103, 'full_steps_per_rotation': 200, 'gear_ratio': [[50.0, 10.0]], 'enable_pin': '!sht36:PA15'}, 'gcode_arcs': {'resolution': 1.0}, 'output_pin lights': {'pwm': True, 'pin': 'PC8', 'cycle_time': 0.01, 'hardware_pwm': False, 'scale': 1.0, 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro lights_on': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.6', 'description': 'G-Code macro'}, 'gcode_macro lights_on_20': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.20', 'description': 'G-Code macro'}, 'gcode_macro lights_off': {'gcode': '\nSET_PIN PIN=LIGHTS VALUE=0.0', 'description': 'G-Code macro'}, 'neopixel sb_leds': {'pin': 'sht36:PB0', 'chain_count': 3, 'color_order': ['GRBW'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'gcode_macro _sb_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_colors': "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'red': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'orange': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},\n'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'blue': {'r': 0.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},\n'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},\n'yellow': {'r': 0.4, 'g': 0.4, 'b': 0.0, 'w': 0.0},\n'purple': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':0.8},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}", 'variable_logo_led_name': '"sb_leds"', 'variable_logo_idx': '"3"', 'variable_nozzle_led_name': '"sb_leds"', 'variable_nozzle_idx': '"1,2"'}, 'gcode_macro _set_sb_leds': {'gcode': "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}", 'description': 'G-Code macro'}, 'gcode_macro _set_sb_leds_by_name': {'gcode': '\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}\n{% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}\n{% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_logo_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].logo_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro _set_nozzle_leds': {'gcode': '\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}\n{% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_logo_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_on': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro set_nozzle_leds_off': {'gcode': '\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}', 'description': 'G-Code macro'}, 'gcode_macro status_off': {'gcode': '\nset_logo_leds_off transmit=0\nset_nozzle_leds_off', 'description': 'G-Code macro'}, 'gcode_macro status_ready': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="standby" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_busy': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="busy" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_heating': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="heating" transmit=0\n_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1', 'description': 'G-Code macro'}, 'gcode_macro status_leveling': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="leveling" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_homing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="homing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_cleaning': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="cleaning" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_meshing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="meshing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_calibrating_z': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_printing': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="printing" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_orange': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="orange" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_red': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="red" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_purple': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="purple" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_green': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="green" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_white': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="white" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_yellow': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="yellow" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'gcode_macro status_blue': {'gcode': '\n_set_sb_leds_by_name leds="logo" color="blue" transmit=0\nset_nozzle_leds_on', 'description': 'G-Code macro'}, 'delayed_gcode set_sb_leds_on_boot': {'gcode': '\nflicker\nstatus_ready', 'initial_duration': 1.0}, 'gcode_macro flicker': {'gcode': '\n{% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}\n{% set RGB_Red = 0.2 %}\n{% set RGB_Green = 0.2 %}\n{% set RGB_Blue = 0.2 %}\n{% set RGB_Strip = "sb_leds" %}\n{% set RGB_Strip1 = "mini12864" %}\n\n{% for toggletime in LEDTimes %}\n{% set ledTime = toggletime|string %}\n{% set loopCount = loop.index %}\n\n{% if loopCount is divisibleby 2 %}\nSET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue}\nG4 P{ledTime|int}\n{% else %}\nSET_LED LED={RGB_Strip}\nG4 P{ledTime|int}\n{% endif %}\n\n{% endfor %}\n\n{% for i in range(1,9) %}\nSET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1\nG4 P200\n{% endfor %}', 'description': 'G-Code macro'}, 'beacon': {'speed': 5.0, 'lift_speed': 5.0, 'backlash_comp': 0.5, 'x_offset': 0.0, 'y_offset': -24.0, 'trigger_distance': 2.0, 'trigger_dive_threshold': 1.0, 'trigger_hysteresis': 0.006, 'z_settling_time': 5, 'cal_nozzle_z': 0.1, 'cal_floor': 0.2, 'cal_ceil': 5.0, 'cal_speed': 1.0, 'cal_move_speed': 10.0, 'autocal_speed': 3, 'autocal_accel': 100, 'autocal_retract_dist': 2, 'autocal_retract_speed': 100, 'autocal_sample_count': 3, 'autocal_tolerance': 0.008, 'autocal_max_retries': 3, 'default_model_name': 'default', 'zero_reference_cluster_size': 1, 'mesh_main_direction': 'x', 'mesh_overscan': -1, 'mesh_cluster_size': 1, 'mesh_runs': 2, 'accel_scale': '', 'accel_axes_map': ['x', 'y', 'z'], 'filter_alpha': 0.5, 'filter_beta': 1e-06, 'serial': '/dev/serial/by-id/usb-Beacon_Beacon_RevD_63E3DDD04E4B333448202020FF0A3315-if00', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [15, 15], 'mesh_min': [10.0, 10.0], 'mesh_max': [290.0, 240.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 10.0, 'speed': 150.0, 'fade_start': 1.0, 'fade_end': 5.0, 'fade_target': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.06214, -0.036984, -0.007379, 0.031314, 0.058627, 0.084848, 0.107257, 0.111945, 0.135207, 0.152355, 0.170171], [-0.128044, -0.093273, -0.053917, -0.019434, 0.015362, 0.05103, 0.076081, 0.091292, 0.113629, 0.133648, 0.155842], [-0.171323, -0.136118, -0.096393, -0.057201, -0.010727, 0.024397, 0.048697, 0.07253, 0.099236, 0.126818, 0.150713], [-0.201543, -0.161727, -0.119034, -0.066854, -0.018463, 0.014217, 0.04742, 0.076211, 0.103883, 0.134441, 0.17192], [-0.229879, -0.18857, -0.139992, -0.085341, -0.040984, 0.002604, 0.042138, 0.073877, 0.10462, 0.133705, 0.171879], [-0.263766, -0.213518, -0.162008, -0.108459, -0.058518, -0.007646, 0.03231, 0.069869, 0.102956, 0.138912, 0.180918], [-0.296565, -0.242362, -0.188285, -0.127789, -0.071974, -0.019641, 0.027806, 0.070759, 0.105252, 0.1421, 0.184275], [-0.296242, -0.233747, -0.171416, -0.107834, -0.048348, 0.00454, 0.056827, 0.100566, 0.141602, 0.182628, 0.230079], [-0.281192, -0.22838, -0.164876, -0.101596, -0.03096, 0.023575, 0.079761, 0.121563, 0.171967, 0.216584, 0.26593], [-0.307454, -0.252371, -0.190633, -0.113183, -0.041936, 0.019598, 0.074971, 0.120663, 0.178367, 0.230549, 0.282552], [-0.324293, -0.25843, -0.193413, -0.119856, -0.045648, 0.021113, 0.080729, 0.133249, 0.192194, 0.246004, 0.297448]], 'min_x': 59.444, 'max_x': 240.556, 'min_y': 75.541944, 'max_y': 224.458048, 'x_count': 11, 'y_count': 11, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'z_tilt': {'z_positions': [[-50.0, 18.0], [150.0, 348.0], [350.0, 18.0]], 'retries': 5, 'retry_tolerance': 0.004, 'points': [[30.0, 5.0], [150.0, 245.0], [270.0, 5.0]], 'horizontal_move_z': 10.0, 'speed': 500.0}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n\n{% if display_parameters == True %}\n{ action_respond_info("led_enable  : %d" % (led_enable))  }\n{ action_respond_info("status_macro: \\\'%s\\\'" % (status_macro))  }\n{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }\n{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }\n{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }\n{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }\n{ action_respond_info("attach_macro: \\\'%s\\\'" % (attach_macro))  }\n{ action_respond_info("detach_macro: \\\'%s\\\'" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute=\'polygon\') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method=\'ceil\') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method=\'ceil\') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = "bicubic" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = "lagrange" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( "Algorithm: {}".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( "Reference index: {}".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}', 'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'G-Code macro', 'variable_led_enable': 'False', 'variable_status_macro': "'status_meshing'", 'variable_fuzz_enable': 'False', 'variable_fuzz_min': '0', 'variable_fuzz_max': '4', 'variable_margin_enable': 'False', 'variable_margin_size': '5', 'variable_probe_dock_enable': 'False', 'variable_attach_macro': "'Attach_Probe'", 'variable_detach_macro': "'Dock_Probe'", 'variable_display_parameters': 'True'}, 'gcode_macro z_tilt_adjust': {'gcode': '\n{ action_respond_info("Z Tilt Adjust") }\n\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\n\nG28 Z0', 'rename_existing': '_Z_TILT_ADJUST', 'description': 'G-Code macro'}, 'gcode_macro z_tilt_scan': {'gcode': '\nz_tilt_adjust RETRY_TOLERANCE=1\nz_tilt_adjust HORIZONTAL_MOVE_Z=2', 'description': 'G-Code macro'}, 'gcode_macro macros_vars': {'gcode': '', 'description': 'G-Code macro', 'variable_circ_fan_speed': '255', 'variable_probe_temp': '150', 'variable_starting_wled': '2', 'variable_heating_wled': '4', 'variable_ending_wled': '3', 'variable_ending_length': '25', 'variable_purge_length': '40', 'variable_filament_swap_length': '0.8', 'variable_pla_pa': '0.00525', 'variable_pet_pa': '0.00650', 'variable_abs_pa': '0.00460', 'variable_pet_za': '0.010', 'variable_move_away_home': '0', 'variable_homing_retract': '20'}, 'gcode_macro material_pa': {'gcode': '\n{% set MATERIAL = params.MATERIAL|default("XXX")|string %}\n{% set TEXT ="Setting PA for " + MATERIAL %}\n{% set PLA = printer["gcode_macro MACROS_VARS"].pla_pa|default(0)%}\n{% set PET = printer["gcode_macro MACROS_VARS"].pet_pa|default(0)%}\n{% set ABS = printer["gcode_macro MACROS_VARS"].abs_pa|default(0)%}\n{% set PETZ = printer["gcode_macro MACROS_VARS"].pet_za|default(0)%}\n{% if MATERIAL == "PLA" %}\nSET_PRESSURE_ADVANCE ADVANCE={PLA}\n{% elif MATERIAL == "PET" %}\nSET_PRESSURE_ADVANCE ADVANCE={PET}\nSET_GCODE_OFFSET Z_ADJUST={PETZ} MOVE=1\n{% elif MATERIAL == "ABS" %}\nSET_PRESSURE_ADVANCE ADVANCE={ABS}\n{% else %}\n{% set TEXT ="No PA value for " + MATERIAL %}\n{% endif %}\nDISPLAYTEXT TEXT="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro purge_line': {'gcode': '\nDISPLAYTEXT TEXT="Prime Line"\nG1 X75 E25 F1000\nG92 E0;\nG90\nG0 X75 Y4 F6000\nG1 Z0.2 F200\nG91\nG1 X150 E30 F1200;\nG1 Y1\nG1 X-150 E30 F1200;\nG92 E0.0\nG1 Z1 F5000', 'description': 'G-Code macro'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(110)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|float %}\n{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}\n{% set PROBE_TEMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}\n\nSET_TEMP HEATER="bed" TEMP={BED_TEMP}\nSET_TEMP HEATER="extruder" TEMP={PROBE_TEMP} WAIT=1\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nDISPLAYTEXT TEXT="Homing"\nG28\n{% endif %}\nDISPLAYTEXT TEXT="Heating Bed"\nSET_TEMP HEATER="bed" TEMP={BED_TEMP} WAIT=1\n\n{% if not printer.z_tilt.applied %}\nDISPLAYTEXT TEXT="Z tilt thingy"\nZ_TILT_ADJUST\n{% endif %}\nMATERIAL_PA MATERIAL={FILAMENT}\nDISPLAYTEXT TEXT="Heating Extruder"\nSET_TEMP HEATER="extruder" TEMP={EXTRUDER_TEMP} WAIT=1\n\nBED_MESH_CALIBRATE\nSET_FAN_SPEED FAN=rebreather SPEED=1\nSET_FAN_SPEED FAN=stepper_fans SPEED=0.25\nMATERIAL_PA MATERIAL={FILAMENT}\nG4 P1000\nPURGE_LINE\n\n\nDISPLAYTEXT TEXT="Printing..."', 'description': 'G-Code macro'}, 'gcode_macro g32': {'gcode': '\nBED_MESH_CLEAR\nG28\nZ_TILT_ADJUST\nG28\nG0 X75 Y75 Z30 F3600', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\n\n{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}\n{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}\n{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}\n{% set FILAMENT = params.FILAMENT|default(PLA) %}\n\n\n{% if printer.toolhead.position.x < (max_x - 20) %}\n{% set x_safe = 20.0 %}\n{% else %}\n{% set x_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.y < (max_y - 20) %}\n{% set y_safe = 20.0 %}\n{% else %}\n{% set y_safe = -20.0 %}\n{% endif %}\n\n{% if printer.toolhead.position.z < (max_z - 2) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - printer.toolhead.position.z %}\n{% endif %}\n\nM400\nG92 E0\nG1 E-25.0 F1800\nG91\nG0 Z{z_safe} F3600\nG0 X{x_safe} Y{y_safe} F20000\n\nTURN_OFF_HEATERS\nM107\nG1 Z2 F3000\nG90\nG0 X{max_x / 2} Y{max_y} F3600\n\n\n{% if FILAMENT == \'ABS\' or params.FILAMENT == \'ASA\' %}\nNEVERMORE_END_PRINT\n{% endif %}\n\nDISPLAYTEXT TEXT="Print Complete"', 'description': 'G-Code macro'}, 'gcode_macro set_temp': {'gcode': '\n{% set HEATER = params.HEATER|default("")|string %}\n{% set TEMP = params.TEMP|default(0)|int %}\n{% set WAIT = params.WAIT|default(0)|int %}\n\n{% if HEATER == "extruder" %}\n{% if WAIT == 1 %}\nM109 S{TEMP}\n{% else %}\nM104 S{TEMP}\n{% endif %}\n{% else %}\n{% if WAIT == 1 %}\nM190 S{TEMP}\n{% else %}\nM140 S{TEMP}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro ending_retraction': {'gcode': '\n{% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}\nG1 E{RETRACT*-1} F1800', 'description': 'G-Code macro'}, 'gcode_macro park_at_print_end': {'gcode': '\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600', 'description': 'G-Code macro'}, 'gcode_macro homing_variables': {'gcode': '', 'description': 'G-Code macro', 'variable_move_away_home': '0', 'variable_x_homing_pos': '150', 'variable_y_homing_pos': '150', 'variable_homing_current': '0.8', 'variable_homing_retract_x': '150', 'variable_homing_retract_y': '20', 'variable_homing_retract_speed': '5000', 'variable_z_end_pos': '30', 'variable_is_sensorless': 'True', 'variable_display_parameters': 'True'}, 'homing_override': {'axes': 'xyz', 'gcode': '\nDISPLAY_PARAMETERS\n\n\nSET_KINEMATIC_POSITION Z=0\nMOVE_AWAY_BEFORE_HOMING PARAMS="Z"\nWAIT TIME=2\n\n{% set home_all = \'X\' not in params and \'Y\' not in params and \'Z\' not in params %}\n\n{% if home_all or \'X\' in params %}\n_HOME_X\n{% endif %}\n\n{% if home_all or \'Y\' in params %}\n_HOME_Y\n{% endif %}\n\n{% if home_all or \'Z\' in params %}\n_HOME_Z\n{% endif %}'}, 'gcode_macro display_parameters': {'gcode': '\n{% set DISPLAY_PARAMS = printer["gcode_macro Homing_Variables"].display_parameters %}\n{% set is_sensorless = printer["gcode_macro Homing_Variables"].is_sensorless %}\n{% set x_homing_pos = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set y_homing_pos = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n{% set homing_current = printer["gcode_macro Homing_Variables"].homing_current %}\n{% set homing_retract_x = printer["gcode_macro Homing_Variables"].homing_retract_x %}\n{% set homing_retract_y = printer["gcode_macro Homing_Variables"].homing_retract_y %}\n{% set homing_retract_speed = printer["gcode_macro Homing_Variables"].homing_retract_speed %}\n{% set z_end_pos = printer["gcode_macro Homing_Variables"].z_end_pos %}\n\n{% if DISPLAY_PARAMS == True %}\n{ action_respond_info("is_sensorless  : %d" % (is_sensorless))  }\n{ action_respond_info("x_homing_pos  : %d" % (x_homing_pos))  }\n{ action_respond_info("y_homing_pos  : %d" % (y_homing_pos))  }\n{ action_respond_info("homing_current  : %d" % (homing_current))  }\n{ action_respond_info("homing_retract_x  : %d" % (homing_retract_x))  }\n{ action_respond_info("homing_retract_y  : %d" % (homing_retract_y))  }\n{ action_respond_info("homing_retract_speed  : %d" % (homing_retract_speed))  }\n{ action_respond_info("z_end_pos  : %d" % (z_end_pos))  }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro move_away_before_homing': {'gcode': '\n{% set MAH = printer["gcode_macro Homing_Variables"].move_away_home|default(0)%}\n{% set PARAMS = params.PARAMS|default("")|string %}\n\n{% set home_all = \'X\' not in PARAMS and \'Y\' not in PARAMS and \'Z\' not in PARAMS %}\n\n\n{% if home_all or \'X\' in PARAMS %}\nG1 X-{MAH/2}  F6000\n{% endif %}\n\n{% if home_all or \'Y\' in PARAMS %}\nG1  Y-{MAH/2} F6000\n{% endif %}\n\n{% if home_all or \'Z\' in PARAMS %}\nG1 Z{MAH} F100\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_x': {'gcode': '\nDISPLAYTEXT TEXT="Homing X Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_x|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION X=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="X"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 X\n\nG91\nG1 X-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_y': {'gcode': '\nDISPLAYTEXT TEXT="Homing Y Axis"\n\n\n\n{% set RUN_CURRENT_X = printer.configfile.settings[\'tmc5160 stepper_x\'].run_current|float %}\n{% set RUN_CURRENT_Y = printer.configfile.settings[\'tmc5160 stepper_y\'].run_current|float %}\n{% set HOMING_CURRENT = printer["gcode_macro Homing_Variables"].homing_current|float %}\n{% set HOMING_RETRACT = printer["gcode_macro Homing_Variables"].homing_retract_y|default(10) %}\n{% set HOMING_RETRACT_SPEED = printer["gcode_macro Homing_Variables"].homing_retract_speed|default(1200) %}\n{% set IS_SENSORLESS = printer["gcode_macro Homing_Variables"].is_sensorless %}\n\nSET_KINEMATIC_POSITION Y=5\nRELATIVE_COORDINATES\nMOVE_AWAY_BEFORE_HOMING PARAMS="Y"\n\n{% if IS_SENSORLESS == True %}\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}\n{% endif %}\n\n\nG28 Y\n\nG91\nG1 Y-{HOMING_RETRACT}  F{HOMING_RETRACT_SPEED}\nG90\n\n{% if IS_SENSORLESS == True %}\n\nG4 P1000\n\n\nSET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}\nSET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _home_z': {'gcode': '\n{% set Ez = printer["gcode_macro Homing_Variables"].z_end_pos %}\n{% set Hx = printer["gcode_macro Homing_Variables"].x_homing_pos %}\n{% set Hy = printer["gcode_macro Homing_Variables"].y_homing_pos %}\n\nDISPLAYTEXT TEXT="Homing Z Axis"\n\nG1 X{Hx} Y{Hy} F15000\nG28 Z\nG1 Z{Ez}', 'description': 'G-Code macro'}, 'gcode_macro absolute_coordinates': {'gcode': '\nG90', 'description': 'G-Code macro'}, 'gcode_macro relative_coordinates': {'gcode': '\nG91', 'description': 'G-Code macro'}, 'gcode_macro displaytext': {'gcode': '\n{% set TEXT = params.TEXT|default("")|string %}\nRESPOND MSG="{TEXT}"\nSET_DISPLAY_TEXT MSG="{TEXT}"', 'description': 'G-Code macro'}, 'gcode_macro display_progress': {'gcode': '\n{% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %}\n{% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %}\nRESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"', 'description': 'G-Code macro'}, 'gcode_macro temperature_wait': {'gcode': '\n{% set SENSOR = params.SENSOR|default("")|string %}\n{% set MINIMUM = params.MINIMUM|int %}\n{% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}\n\nDISPLAYTEXT TEXT="Heatsoaking..."\n_TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM}\nDISPLAYTEXT TEXT="{MSG}"', 'rename_existing': '_TEMPERATURE_WAIT', 'description': 'G-Code macro'}, 'gcode_macro wait': {'gcode': '\n{% set TIME = params.TIME|default(0)|int %}\nG4 P{TIME*1000}', 'description': 'G-Code macro'}, 'gcode_macro chome': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nDISPLAYTEXT TEXT="Homing.."\nG28\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro reset_extruder': {'gcode': '\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro park_toolhead': {'gcode': '\n{% set th = printer.toolhead %}\nABSOLUTE_COORDINATES\nG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000', 'description': 'G-Code macro'}, 'gcode_macro dump_variables': {'gcode': '\n{% set filter_name = params.NAME|default(\'\')|string|lower %}\n{% set filter_value = params.VALUE|default(\'\')|string|lower %}\n{% set show_cfg = params.SHOW_CFG|default(0)|int %}\n\n{% set out = [] %}\n\n{% for key1 in printer %}\n{% for key2 in printer[key1] %}\n{% if (show_cfg or not (key1|lower == \'configfile\' and key2|lower in [\'config\', \'settings\'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'].%s = %s" % (key1, key2, printer[key1][key2])) %}\n{% endif %}\n{% else %}\n{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}\n{% set dummy = out.append("printer[\'%s\'] = %s" % (key1, printer[key1])) %}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n{action_respond_info(out|join("\\n"))}', 'description': 'G-Code macro'}, 'gcode_macro unload_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state\n\nM82\nG92 E0\nG1 E2 F3600\nG1 E0 F3600\nG1 E3 F3600\nG1 E0 F3600\nG1 E4 F3600\nG1 E0 F3600\n\nM83\nG1 E-20 F3600\nG4 P3000\nG1 E{DISTANCE|float * -1} F3000\nRESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro load_filament': {'gcode': '\n{% set TEMP = params.TEMP|default(230)|float %}\n{% set DISTANCE = params.DISTANCE|default(105)|float %}\n\nM400\nSAVE_GCODE_STATE NAME=LOAD_FILAMENT_state\n\nM83\nG92 E0\nG1 E{DISTANCE|float} F200\n\n\n\n\nG1 E50 F150\n\n\nG92 E0\nRESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state', 'description': 'G-Code macro'}, 'gcode_macro pid_hotend': {'gcode': '\nPID_CALIBRATE HEATER=extruder TARGET=250', 'description': 'G-Code macro'}, 'gcode_macro pid_bed': {'gcode': '\nPID_CALIBRATE HEATER=heater_bed TARGET=80', 'description': 'G-Code macro'}, 'gcode_macro z_endstop': {'gcode': '\nZ_ENDSTOP_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro probe_cal': {'gcode': '\n\nG28\nPROBE_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro is_cal': {'gcode': '\n\nG28\nSHAPER_CALIBRATE', 'description': 'G-Code macro'}, 'gcode_macro speedtest': {'gcode': '\n\n\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest_state\n\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{maxX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY + (maxY-minY)/2}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{maxX} Y{minY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest_state', 'description': 'G-Code macro'}, 'gcode_macro speedtest2': {'gcode': '\n{% set fmin = params.FMIN|default(300)|float * 60 %}\n{% set fmax = params.FMAX|default(400)|float * 60 %}\n{% set steps = params.STEPS|default(3)|int %}\n{% set cycles = params.CYCLES|default(1)|int %}\n\n{% set inset = 20.0|float %}\n{% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}\n{% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}\n{% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}\n{% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}\n\nSAVE_GCODE_STATE NAME=speedtest2_state\nG90\n{% for INTERVAL in range(steps) %}\n{% for REPEAT in range(cycles) %}\n{% if fmin == fmax %}\n{% set feedrate = fmin %}\n{% else %}\n{% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}\n{% endif %}\nM400\nM117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}\nG1 F{feedrate}\nG1 X{minX} Y{minY}\nG1 X{maxX} Y{minY}\nG1 X{maxX} Y{maxY}\nG1 X{minX} Y{maxY}\n{% endfor %}\n{% endfor %}\nM117\npark_toolhead\nRESTORE_GCODE_STATE NAME=speedtest2_state', 'description': 'G-Code macro'}, 'gcode_macro pressure_advance_calibration': {'gcode': '\n\n\n\n{% set pa_start     = params.START|default(0.02)|float %}\n{% set pa_increment = params.INCREMENT|default(0.005)|float %}\n\n{% set do_raft = params.RAFT|default(1)|int %}\n\n{% set print_size      = params.SIZE|default(120)|int %}\n{% set num_bands       = params.BANDS_LIMIT|default(999)|int %}\n{% set lines_per_band  = params.LINES_PER_BAND|default(6)|int %}\n{% set e_multiplier    = params.EXTRUSION_MULTIPLIER|default(1.25 if do_raft == 1 else 1.5)|float %},\n{% set retract_length  = params.RETRACT|default(0.6)|float %}\n{% set initial_purge   = params.PURGE_MM|default(8)|int %}\n\n{% set feedrate_control = params.CONTROL_SPEED|default(30)|int * 60 %}\n{% set feedrate_outer   = params.OUTER_SPEED|default(40)|int * 60 %}\n{% set feedrate_inner   = params.INNER_SPEED|default(120)|int * 60 %}\n{% set feedrate_travel  = params.TRAVEL_SPEED|default(200)|int * 60 %}\n{% set feedrate_raft    = params.RAFT_SPEED|default(120)|int * 60 %}\n{% set feedrate_z       = 5 * 60 %}\n{% set feedrate_retract = 50 * 60 %}\n\n{% set spacing_line  = params.LINE_SPACING|default(0.4)|float %}\n{% set spacing_band  = 2 %}\n{% set spacing_raft  = 2 %}\n\n{% set fast_line_ratio_percent = 50 %}\n\n{% set lines_per_band    = [2, lines_per_band]|max %}\n{% set e_multiplier      = [1, e_multiplier]|max %}\n{% set num_lines_control = (lines_per_band / 2)|round(0, \'floor\')|int %}\n{% set num_lines_test    = (lines_per_band / 2)|round(0, \'ceil\')|int %}\n{% set spacing_line      = spacing_line * (1 + e_multiplier - 1.25) %}\n\n{% set max_x = printer.toolhead.axis_maximum.x|float %}\n{% set max_y = printer.toolhead.axis_maximum.y|float %}\n{% set nozzle_diameter = printer.configfile.config[\'extruder\'].nozzle_diameter|float %}\n{% set line_width    = nozzle_diameter * 1.25 %}\n{% set line_height   = nozzle_diameter / 2 %}\n{% set z_hop_height  = 2 * line_height %}\n{% set e_per_mm      = (line_width * line_height) / (3.1415 * (1.75/2)**2) %}\n{% set spacing_purge = line_height * 0.8 %}\n\n{% set spacing_raft   = (spacing_raft / line_width)|round * line_width %}\n{% set num_raft_lines = ([print_size, max_x]|min / spacing_raft)|round(0, \'floor\')|int %}\n{% set print_width    = num_raft_lines * spacing_raft %}\n\n{% set band_height      = lines_per_band * line_width + (lines_per_band - 1) * spacing_line + spacing_band %}\n{% set bands_per_height = (([print_size, max_y]|min  - spacing_purge) / band_height)|round(0, \'floor\')|int %}\n{% set num_bands        = [num_bands, bands_per_height]|min %}\n{% set print_height     = num_bands * band_height - spacing_band - spacing_purge %}\n\n{% set slow_line_length = ((print_width * (1 - fast_line_ratio_percent / 100) / 2) / spacing_raft)|round * spacing_raft + spacing_raft / 2 %}\n{% set fast_line_length = print_width - slow_line_length * 2 %}\n{% set thick_raft_num1 = (slow_line_length / spacing_raft)|round|int %}\n{% set thick_raft_num2  = num_raft_lines - thick_raft_num1 + 1 %}\n\n{% set x_start = max_x / 2 - print_width  / 2 %}\n{% set y_start = max_y / 2 - print_height / 2 %}\n\n{action_respond_info("")}\n{action_respond_info("Starting Pressure Advance calibration print.")}\n{action_respond_info("")}\n{action_respond_info("This operation can not be interrupted by normal means. Hit the \\"emergency stop\\" button once the print starts exhibiting PA values that are obviously too high.")}\n{action_respond_info("")}\n{action_respond_info("PA of first band: %.4f" % pa_start)}\n{action_respond_info("PA of last band: %.4f" % (num_bands * pa_increment))}\n{action_respond_info("PA increment per band: %.4f" % pa_increment)}\n{action_respond_info("Number of bands: %d" % num_bands)}\n{action_respond_info("")}\n{action_respond_info("Inspect the printed model. "\n"Look at the top and bottom lines in each band, on the right side of the two vertical raft bars (where the print speeds change). "\n"Find the highest band from the bottom where the lines at its top still resemble the lines at its bottom, with no visible extrusion width irregularities. "\n"Your final Pressure Advance value would then be:"\n)}\n{action_respond_info("")}\n{action_respond_info("PA = %.4f + (%.4f * band_number)" % (pa_start, pa_increment))}\n{action_respond_info("")}\n{action_respond_info("Update your [extruder] config section and set \\"pressure_advance\\" to the value you calculated.")}\n{action_respond_info("")}\n\n\n\n\n\n\n\n\n\nSAVE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION\n{% set pa_saved = printer.configfile.settings[\'extruder\'].pressure_advance %}\nSET_PRESSURE_ADVANCE ADVANCE={pa_start}\n\n\n\n\nM117 Priming\nG90\nG0 X{x_start} Y{y_start} Z{line_height} F{feedrate_travel}\nG91\nG1 E{initial_purge} F{5 * 60}\nG1 X{print_width}  E{print_width * e_per_mm} F{feedrate_raft / 2}\nG1 Y{line_width}   E{line_width * e_per_mm}  F{feedrate_raft / 2}\nG1 X-{print_width} E{print_width * e_per_mm} F{feedrate_raft / 2}\n\n\n\n\n{% if do_raft == 1 %}\nG0 F{feedrate_raft}\n\n{% for curr_raft_line in range(1, num_raft_lines + 2) %}\n\n{% if curr_raft_line == thick_raft_num1 or curr_raft_line == thick_raft_num2 %}\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\nG1 Y{loop.cycle(-1.0, 1.0) * print_height} E{print_height * e_per_mm}\nG1 X{line_width} E{line_width * e_per_mm}\n{% endif %}\n\nG1 Y{loop.cycle(1.0, -1.0) * print_height} E{print_height * e_per_mm}\n\n\n{% if not loop.last %}\n{% set horizontal_move = spacing_raft - (2 * line_width if curr_raft_line == thick_raft_num1 - 1 or curr_raft_line == thick_raft_num2 - 1 else 0) %}\nG1 X{horizontal_move} E{horizontal_move * e_per_mm}\n{% endif %}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n{% endif %}\n\n\n\n\nM117 Printing bands\nG90\nG0 X{x_start} Y{y_start + 2 * line_width + spacing_purge} F{feedrate_travel}\nG0 Z{line_height + (line_height if do_raft == 1 else 0)} F{feedrate_z}\nG91\nG1 E{retract_length} F{feedrate_retract}\n\n\n{% for curr_band_num in range(1, num_bands + 1) %}\n{% set outer_loop = loop %}\n\n{% set curr_pa_value = pa_start + (curr_band_num - 1) * pa_increment %}\nSET_PRESSURE_ADVANCE ADVANCE={curr_pa_value}\nM117 Band {curr_band_num} PA {curr_pa_value|round(4)}\n\n\n{% for _ in range(num_lines_control) %}\nG1 X{print_width} E{print_width * e_per_mm * e_multiplier} F{feedrate_control}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\nG0 X-{print_width} Y{spacing_line + line_width} F{feedrate_travel}\n\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endfor %}\n\n\n{% for _ in range(num_lines_test) %}\n{% for data in [{\'mm\': slow_line_length, \'f\': feedrate_outer}, {\'mm\': fast_line_length, \'f\': feedrate_inner}, {\'mm\': slow_line_length, \'f\': feedrate_outer}] %}\nG1 X{data.mm} E{data.mm * e_per_mm * e_multiplier} F{data.f}\n{% endfor %}\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z{z_hop_height} F{feedrate_z}\n\n{% if not (outer_loop.last and loop.last) %}\nG0 X-{print_width} Y{(spacing_line if not loop.last else spacing_band) + line_width} F{feedrate_travel}\nG0 Z-{z_hop_height} F{feedrate_z}\nG1 E{retract_length} F{feedrate_retract}\n{% endif %}\n{% endfor %}\n{% endfor %}\n\n\n\n\nG1 E-{retract_length} F{feedrate_retract}\nG0 Z20 F{feedrate_z}\nG0 X-{print_width / 2} Y{[50, max_y - (y_start + print_height)]|min} F{feedrate_travel}\n\nM117\nSET_PRESSURE_ADVANCE ADVANCE={pa_saved}\nRESTORE_GCODE_STATE NAME=STATE_PRESSURE_ADVANCE_CALIBRATION', 'description': 'Calibrate the pressure advance by printing a grid pattern'}, 'gcode_macro test_speed': {'gcode': '\n\n{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}\n\n{% set iterations = params.ITERATIONS|default(5)|int %}\n\n{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}\n\n{% set bound = params.BOUND|default(20)|int %}\n\n{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}\n\n\n\n{% set x_min = printer.toolhead.axis_minimum.x + bound %}\n{% set x_max = printer.toolhead.axis_maximum.x - bound %}\n{% set y_min = printer.toolhead.axis_minimum.y + bound %}\n{% set y_max = printer.toolhead.axis_maximum.y - bound %}\n\n\n\n{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}\n{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}\n\n\n{% set x_center_min = x_center - (smallpatternsize/2) %}\n{% set x_center_max = x_center + (smallpatternsize/2) %}\n{% set y_center_min = y_center - (smallpatternsize/2) %}\n{% set y_center_max = y_center + (smallpatternsize/2) %}\n\n\nSAVE_GCODE_STATE NAME=TEST_SPEED\n\n\n{ action_respond_info("TEST_SPEED: x_min %d, y_min %d, x_max %d, y_max %d" % (x_min, y_min, x_max, y_max)) }\n{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }\n\n\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\nG28 X Y\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\nG4 P1000\nGET_POSITION\n\n\nG0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}\n\n\nSET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}\n\n{% for i in range(iterations) %}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\nG0 X{x_min} Y{y_min} F{speed*60}\nG0 X{x_min} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_max} F{speed*60}\nG0 X{x_max} Y{y_min} F{speed*60}\n\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n\n\nG0 X{x_center_min} Y{y_center_min} F{speed*60}\nG0 X{x_center_min} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_max} F{speed*60}\nG0 X{x_center_max} Y{y_center_min} F{speed*60}\n{% endfor %}\n\n\nSET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\n\n\nG28 X Y\n\n\n\nG4 P1000\nGET_POSITION\n\n\nRESTORE_GCODE_STATE NAME=TEST_SPEED', 'description': 'G-Code macro'}, 'gcode_macro setup_kamp_meshing': {'gcode': '\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE=\'"{params.STATUS_MACRO|default(\'status_meshing\')|string}"\'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE=\'"{params.ATTACH_MACRO|default(\'Attach_Probe\')|string}"\'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE=\'"{params.DETACH_MACRO|default(\'Dock_Probe\')|string}"\'', 'description': 'G-Code macro'}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'zv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 86.8, 'shaper_type_y': 'zv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 62.2}, 'beacon model default': {'model_coef': [1.409155451498927, 1.7229833219997472, 0.7624260199879447, 0.3933310021549746, 0.3504714980336664, 0.3215136667184013, -0.12014580629124338, -0.22419779942999016, 0.19713656245482147, 0.188750402116144], 'model_temp': 23.909578, 'model_domain': [3.120873231931901e-07, 3.332026812812074e-07], 'model_range': [0.2, 5.0], 'model_offset': 0.025}, 'printer': {'max_velocity': 800.0, 'max_accel': 20000.0, 'minimum_cruise_ratio': 0.5, 'square_corner_velocity': 5.0, 'kinematics': 'corexy', 'max_z_velocity': 15.0, 'max_z_accel': 350.0}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-04-28 07:16:15,410 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-04-28 07:16:15,411 [printer.py:reinit()] - Klipper version: v0.12.0-175-g7b490f3e-dirty
2024-04-28 07:16:15,411 [printer.py:reinit()] - # Extruders: 1
2024-04-28 07:16:15,411 [printer.py:reinit()] - # Temperature devices: 5
2024-04-28 07:16:15,412 [printer.py:reinit()] - # Fans: 6
2024-04-28 07:16:15,412 [printer.py:reinit()] - # Output pins: 1
2024-04-28 07:16:15,412 [printer.py:reinit()] - # Leds: 2
2024-04-28 07:16:15,425 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2024-04-28 07:16:15,427 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-04-28 07:16:15,714 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&temperature_sensor Spider&temperature_sensor raspberry_pi&temperature_sensor sht36&temperature_sensor chamber&fan&controller_fan stepper_drivers&fan_generic stepper_fans&fan_generic rebreather&heater_fan controller_fan&heater_fan hotend_fan&output_pin LIGHTS&neopixel mini12864&neopixel sb_leds
2024-04-28 07:16:15,718 [files.py:set_gcodes_path()] - Gcodes path: /home/pi/printer_data/gcodes
2024-04-28 07:16:15,718 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-04-28 07:16:15,719 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2024-04-28 07:16:15,721 [screen.py:init_klipper()] - Printer initialized
2024-04-28 07:16:15,721 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-04-28 07:16:15,721 [printer.py:change_state()] - Adding callback for state: startup
2024-04-28 07:16:17,648 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-04-28 07:16:17,649 [printer.py:change_state()] - Adding callback for state: ready
2024-04-28 07:16:17,651 [files.py:remove_file_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0x7f8c051eb0>>
2024-04-28 07:16:17,652 [screen.py:show_panel()] - Reinitializing panel
2024-04-28 07:16:17,718 [main_menu.py:__init__()] - ### Making MainMenu
2024-04-28 07:16:17,735 [main_menu.py:add_device()] - Adding device: extruder
2024-04-28 07:16:17,740 [main_menu.py:add_device()] - Adding device: heater_bed
2024-04-28 07:16:17,745 [main_menu.py:add_device()] - Adding device: temperature_sensor Spider
2024-04-28 07:16:17,749 [main_menu.py:add_device()] - Adding device: temperature_sensor raspberry_pi
2024-04-28 07:16:17,754 [main_menu.py:add_device()] - Adding device: temperature_sensor sht36
2024-04-28 07:16:17,759 [main_menu.py:add_device()] - Adding device: temperature_sensor chamber
2024-04-28 07:16:17,801 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-04-28 07:16:17,815 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2024-04-28 07:16:17,828 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Spider', 'temperature_sensor raspberry_pi', 'temperature_sensor sht36', 'temperature_sensor chamber', 'heater_bed', 'temperature_sensor beacon_coil', 'extruder']
2024-04-28 07:16:17,838 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2024-04-28 07:16:17,839 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-04-28 07:16:18,225 [screen.py:show_popup_message()] - error: // Unknown command:"_SET_TIMELAPSE_SETUP"
2024-04-28 07:49:08,352 [screen.py:show_screensaver()] - Showing Screensaver
2024-04-28 07:49:08,353 [screen.py:show_screensaver()] - Hiding dialog
2024-04-28 07:49:08,359 [screen.py:show_screensaver()] - Hiding dialog
